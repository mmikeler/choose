{"version":3,"sources":["components/social-icons/icons.js","components/pages/home/home.js","images/demo.png","components/notice.js","components/user.js","components/pages/collection/collection.js","components/modals/modal.js","components/pages/account/groups-tab.js","components/account-tips.js","components/helper.js","components/pages/account/collections-tab.js","components/pages/account/formats-tab.js","components/pages/account/orders-tab.js","components/pages/account/account-tab.js","components/pages/account/drive-tab.js","components/pages/account/account.js","App.js","serviceWorker.js","index.js"],"names":["SocialIcons","className","href","target","icon","Home","state","pass","passForm","loginForm","userLogin","userPass","handleChange","e","value","currentTarget","setState","checkPass","preventDefault","props","setCollCodeFunc","checkLogin","formData","FormData","append","fetch","method","body","then","res","json","error","setAuthInfoFunc","userLoginHandleChange","userPassHandleChange","toggleLoginForm","id","auth","this","onclickFunc","onSubmit","onChange","maxLength","minLength","pattern","type","placeholder","defaultValue","text","React","Component","Notice","LoginBtn","onClickHandle","trigger","onClick","status","handleClose","timer","setTimeout","clearTimeout","data-dismiss","User","data","JSON","parse","sessionStorage","getItem","propname","cookieChecker","upd","length","orderItem","cart","item","f","formats","qty","push","undefined","setItem","stringify","prepareCart","count","total","items","n","cost","dataset","action","path","getCart","formatID","imgPath","m","itemPath","k","a","splice","removeItem","result","console","output","name","fototype","size","displayName","date","u","Image","isCurrent","currentSteck","itemTitle","handleDoImageFormat","setStepFunc","j","handleRemove","handleAddToCart","addOrderItem","autoResize","offsetWidth","offsetHeight","displayFormats","onLoad","data-current","data-path","data-title","src","Img","alt","remove","func","addtocart","FormatItem","el","data-id","data-action","Formats","document","style","overflow","tpl","itemTotal","itemTotalCount","cartBtn","i","FotoGroupsItem","step","handleMouseEnter","closest","classList","add","handleMouseLeave","handleOpen","toggleCurrentSteck","setStep","num","updstep","changedImagePath","changedImageTitle","fotos","reverse","forEach","data-stacked","stacked","data-updstep","DisplayStepCaption","onMouseEnter","onMouseLeave","FotoGroup","stack","title","FotoGroups","drive","group","groups","g","Collection","visible","targetPosition","window","pageYOffset","getBoundingClientRect","top","pageXOffset","left","right","bottom","windowPosition","documentElement","clientWidth","clientHeight","uploadFoto","goHome","confirm","setPageFunc","clear","post","post_author","ID","notice","loading","setInterval","querySelectorAll","clearInterval","class","sessionid","author","Cart","stage","mod","Date","getTime","setStage_afterRequest","setStage","key","toString","checkCartCount","cartCount","cartItems","displayItems","CartItem","format","checkoutBtn","cartTotal","Bar","setstage","authorID","btn","updateOrderItem","CheckoutForm","formReady","addOrder_Result","checked","validateForm","handleSubmit","prepareOrderData","message","fd","formObject","updData","formValid","username","phone","email","payment","required","vakue","defaultChecked","htmlFor","disabled","user","Modal","targetRef","useRef","useState","dimensions","open","ref","role","close","aria-hidden","children","footer","ChForm","submit","success","log","event","initialValues","fields","init","form","map","col","fieldname","label","Input","onChangeFunc","caption","isSubmitting","Fragment","getTitle","options","option","editable","multiple","as","rows","formatsChanged","FormatsList","isChecked","is","formatsList","GroupsTab","openForm","toLocaleString","ifSuccess","modalAction","displayModal","closeModal","displayUpdModal","lustUpdTime","table","row","comment","password","TableRow","maxWidth","lineHeight","RowOptions","removeTerm","termid","data-toggle","data-placement","data-original-title","aria-describedby","accountTips","InlineTips","CollectionTab","posts","groupsList","getUserGroupsSelectOptions","groupid","groupCount","fotoCount","prepareImagesFromDrive","removePost","data-tip","FormatsTab","download","sample","colSpan","OrdersTab","singleOrder","orders","openOrderInfo","orderid","closeOrderInfo","order","data-orderid","session","OrderInfo","meta","OrderInfoItem","fotoBin","classes","AccountTab","isLoading","endData","alert","getProp","Card","errormess","rel","authUrl","ErrorIcon","mess","params","url","DriveTab","sources","lvl","goToDir","preparePath","goBack","split","pop","join","replace","dirs","dir","Src","goTo","DirLvl_Caption","width","BackBtn","onclick","Account","mainTab","login","swapMainTabs","tab","mainMenu","current","currentPage","swapfunc","activeTab","Sidebar","List","Main","number","data-tab","Badge","App","page","collPass","setCollCode","setPage","userData","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8a472b79.chunk.js","sourcesContent":["import React from 'react'\r\nimport './style.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst SocialIcons = () => {\r\n    \r\n        return(\r\n            <div className=\"social-buttons\">\r\n                <button className=\"shadow-up-hover social\">\r\n                    <a href=\"#link\" target=\"_blank\">\r\n                        <FontAwesomeIcon icon={[\"fab\", \"vk\"]} />\r\n                    </a>\r\n                </button>\r\n                <button className=\"shadow-up-hover social\">\r\n                    <a href=\"#link\" target=\"_blank\">\r\n                        <FontAwesomeIcon icon={[\"fab\", \"facebook-f\"]} />\r\n                    </a>\r\n                </button>\r\n                <button className=\"shadow-up-hover social\">\r\n                    <a href=\"#link\" target=\"_blank\">\r\n                        <FontAwesomeIcon icon={[\"fab\", \"telegram-plane\"]} />\r\n                    </a>\r\n                </button>\r\n                <button className=\"shadow-up-hover social\">\r\n                    <a href=\"#link\" target=\"_blank\">\r\n                        <FontAwesomeIcon icon={[\"fab\", \"instagram\"]} />\r\n                    </a>\r\n                </button>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport { SocialIcons }","import React from 'react'\r\nimport {SocialIcons} from '../../social-icons/icons'\r\nimport './style.sass'\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    pass: 'DEMO1',\r\n    passForm: '',\r\n    loginForm: 'hidden',\r\n    userLogin: 'demo@mail.demo',\r\n    userPass: 'demopassword',\r\n  }\r\n\r\n  handleChange = (e) => { // отслеживание пароля\r\n    const value = e.currentTarget.value\r\n    this.setState({pass: value})\r\n  }\r\n\r\n  checkPass = (e) => { // переход в коллекцию\r\n    e.preventDefault()\r\n    this.props.setCollCodeFunc(this.state.pass)\r\n  }\r\n\r\n  checkLogin = (e) => {\r\n    e.preventDefault()\r\n    let formData = new FormData();\r\n    formData.append('userpass', this.state.userPass);\r\n    formData.append('login', this.state.userLogin);\r\n    formData.append('action', 'auth');\r\n    fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n        .then(res => res.json())\r\n        .then(\r\n            (res) => {\r\n                if( res['result'] === 'error' ){\r\n                    this.setState({ error: 'Неверный логин или пароль' });\r\n                }\r\n                else{\r\n                    this.props.setAuthInfoFunc(res['message']);\r\n                }\r\n            },\r\n            // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n            // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n            (error) => {\r\n            this.setState({\r\n                error: error + ': Сервер не отвечает'\r\n            });\r\n            }\r\n        )\r\n  }\r\n\r\n  userLoginHandleChange = (e) => {\r\n    const value = e.currentTarget.value\r\n    this.setState({userLogin: value})\r\n  }\r\n  userPassHandleChange = (e) => {\r\n    const value = e.currentTarget.value\r\n    this.setState({userPass: value})\r\n  }\r\n  toggleLoginForm = () => {\r\n        if(this.state.passForm === 'hidden'){\r\n            this.setState({ loginForm: 'hidden', passForm: '' })\r\n        }\r\n        else{\r\n            this.setState({ loginForm: '', passForm: 'hidden' })\r\n        }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <section id=\"home\">\r\n            <div className=\"slogan\">u can <span>CHOOSE</span> it...</div>\r\n            <div className=\"home__right\">\r\n                <LoginBtn auth={this.state.auth} onclickFunc={this.toggleLoginForm} />\r\n                <div className=\"home__right-content\">\r\n                    \r\n                    <form className={this.state.passForm} onSubmit={this.checkPass}>\r\n                        <div className=\"form-group\">\r\n\r\n                            <input\r\n                                onChange={this.handleChange}\r\n                                maxLength=\"5\"\r\n                                minLength=\"5\"\r\n                                pattern=\"[abcdefghjklmonpqrstuvwxyzABCDEFGHJKLMONPQRSTUVWXYZ0123456789]{5}\"\r\n                                className=\"form-control form-control-lg shadow-up\"\r\n                                type=\"text\"\r\n                                placeholder=\"введите код\"\r\n                                defaultValue=\"demo1\"\r\n                            />\r\n\r\n                            <Notice text={this.props.error}/>\r\n                            \r\n                            <p className=\"text-center\">Код можно получить у Вашего мастера. \r\n                                В случае потери контактов, Вы можете воспользоваться поиском по <a href=\"#master-catalog\">каталогу мастеров</a>.\r\n                            </p>\r\n                        </div>\r\n                    </form>\r\n\r\n                    <form className={this.state.loginForm} onSubmit={this.checkLogin}>\r\n                        <div className=\"form-group\">\r\n\r\n                            <input\r\n                                onChange={this.userLoginHandleChange}\r\n                                className=\"form-control form-control-lg shadow-up\"\r\n                                type=\"text\"\r\n                                placeholder=\"Логин\"\r\n                                defaultValue=\"demo@mail.demo\"\r\n                            />\r\n\r\n                            <input\r\n                                onChange={this.userPassHandleChange}\r\n                                className=\"form-control form-control-lg shadow-up\"\r\n                                type=\"password\"\r\n                                placeholder=\"Пароль\"\r\n                                defaultValue=\"demopassword\"\r\n                            />\r\n\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"form-control form-control-lg shadow-up\"\r\n                                value=\"GO\"\r\n                            />\r\n\r\n                            <Notice text={this.props.error}/>\r\n                            \r\n                            <p className=\"text-center\"></p>\r\n                        </div>\r\n                    </form>\r\n                \r\n                </div>\r\n            </div>\r\n            <footer>\r\n                <div className=\"home-left__networks\">\r\n                    < SocialIcons />\r\n                </div>\r\n                <ul className=\"flex-center justify-between flex-column-md w100p\">\r\n                    {/* <li><span>Be-Original 2018-2020</span></li> */}\r\n                    <li><a href=\"#about\">о сервисе</a></li>\r\n                    <li><a href=\"#policy\">политика конфиденциальности</a></li>\r\n                    <li><span>CHOOSE 2019-2020</span></li>\r\n                </ul>\r\n            </footer>\r\n        </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport { Home }\r\n\r\nfunction Notice(props){\r\n    if( props.text !== null){\r\n        return <p className=\"linear-notice--error\">{props.text}</p>;\r\n    }\r\n    else{\r\n        return '';\r\n    }\r\n}\r\n\r\nclass LoginBtn extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {trigger: 0};\r\n    }\r\n\r\n    onClickHandle = () => {\r\n        if(this.state.trigger === 0){\r\n            this.setState({trigger: 1});\r\n        }\r\n        else{\r\n            this.setState({trigger: 0});\r\n        }\r\n        this.props.onclickFunc();\r\n    }\r\n\r\n    render(){\r\n        if(this.props.auth === 1){\r\n            return(\r\n                <p>Hello!</p>\r\n            )\r\n        }\r\n\r\n        let icon = \"\";\r\n        if( this.state.trigger === 1 ){\r\n            icon = 'shadow-up-hover active';\r\n        }\r\n        else{\r\n            icon = 'shadow-up-hover';\r\n        }\r\n        return(\r\n            <div onClick={this.onClickHandle} id=\"login-button\" className={icon}>\r\n                <i className=\"fas fa-sign-in-alt\"></i>\r\n            </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/demo.749a3e13.png\";","import React from 'react'\r\n\r\nclass Notice extends React.Component{\r\n    \r\n    state = {\r\n        status: this.props.status !== 0 ? this.props.status : 0,\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({status: 0});\r\n    }\r\n\r\n    componentDidMount(){\r\n        if( this.state.status === 'success' || this.state.status === 'error' ){\r\n            this.timer = setTimeout(() => {\r\n                this.setState({status: 0});\r\n            }, 2000)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    render(){\r\n        //console.log(this.props.status)\r\n        let status = this.props.status ? this.props.status : this.state.status;\r\n        if(this.state.status === 0){\r\n            return null\r\n        }\r\n\r\n        if(status === 'loading'){\r\n            return(\r\n                <div className=\"alert alert-dismissible alert-info\">\r\n                    <button onClick={this.handleClose} type=\"button\" className=\"close\" data-dismiss=\"alert\">&times;</button>\r\n                    <strong>Обработка...</strong>\r\n                </div>\r\n            )\r\n        }\r\n        else if(status === 'success'){\r\n            return(    \r\n                <div className=\"alert alert-dismissible alert-success\">\r\n                    <button onClick={this.handleClose} type=\"button\" className=\"close\" data-dismiss=\"alert\">&times;</button>\r\n                    <strong>Готово!</strong>\r\n                </div>\r\n            )\r\n        }\r\n        else if(status === 'error'){\r\n            return(    \r\n                <div className=\"alert alert-dismissible alert-danger\">\r\n                    <button onClick={this.handleClose} type=\"button\" className=\"close\" data-dismiss=\"alert\">&times;</button>\r\n                    <strong>Ошибка!</strong>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport { Notice }","// Get user data from session\r\n\r\nclass User{\r\n\r\n    data = JSON.parse(sessionStorage.getItem('CH_user'));\r\n\r\n    cookieChecker(){\r\n        if( sessionStorage.getItem('CH_user') === null ){\r\n            return false;\r\n        }\r\n        else{\r\n            return JSON.parse(sessionStorage.getItem('CH_user'));\r\n        }\r\n    }\r\n\r\n    getProp(propname){\r\n        const data = this.cookieChecker();\r\n        if( !data )\r\n            return 'Ошибка';\r\n        if(data.upd.length !== 0)\r\n        {\r\n            const upd = JSON.parse(data.upd);\r\n            if(upd){\r\n                return upd[propname];\r\n            }\r\n        }\r\n        else{\r\n            return '';\r\n        }\r\n    }\r\n\r\n    addOrderItem(orderItem){\r\n        let cart = sessionStorage.getItem('CH_cart');\r\n        let item = [];\r\n        for( let f in orderItem.formats){ \r\n            if(orderItem.formats[f].qty > 0) item.push(orderItem.formats[f]);\r\n        }\r\n        orderItem.formats = item;\r\n        if(!cart || cart === undefined || cart === \"undefined\"){\r\n            cart = [];\r\n        }\r\n        else{\r\n            cart = JSON.parse(cart);\r\n        }\r\n        cart.push(orderItem);\r\n        sessionStorage.setItem('CH_cart', JSON.stringify(cart));\r\n    }\r\n\r\n    getCart(){\r\n        let cart = JSON.parse(sessionStorage.getItem('CH_cart'));\r\n        if( cart !== '' ){\r\n            return this.prepareCart(cart);\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    prepareCart(data){\r\n        let cart = {\r\n            count: 0,\r\n            total: 0,\r\n            items: data,\r\n        }\r\n        for(let n in data){\r\n            if( data[n].formats !== undefined ){\r\n                for(let f in data[n].formats){\r\n                    const qty = data[n].formats[f].qty;\r\n                    cart.count += qty;\r\n                    cart.total += qty * data[n].formats[f].cost;\r\n                }\r\n            }\r\n        }\r\n        return cart;\r\n    }\r\n\r\n    updateOrderItem(e){\r\n        const [formatID,action,imgPath,cart] = [\r\n            e.dataset.id,\r\n            e.dataset.action,\r\n            e.dataset.path,\r\n            this.getCart()\r\n        ];\r\n        if(cart){\r\n            for(let item in cart){\r\n                let n = cart[item]; \r\n                for(let f in n){\r\n                    const m = n[f];\r\n                    if(imgPath === m.itemPath){\r\n                        for(let k in m.formats){\r\n                            if(formatID === m.formats[k].id){\r\n                                let a = m.formats[k].qty;\r\n                                if(action === 'add')\r\n                                    m.formats[k].qty++\r\n                                else if(action === 'remove')\r\n                                    if(a === 0)\r\n                                        break;\r\n                                    else\r\n                                        m.formats[k].qty--\r\n                                else if(action === 'delete')\r\n                                    m.formats.splice(k,1); \r\n                                \r\n                                sessionStorage.setItem('CH_cart', JSON.stringify(cart.items));\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear(){\r\n        sessionStorage.removeItem('CH_cart');\r\n    }\r\n\r\n    upd(){\r\n        let data = new FormData();\r\n        data.append('user', this.id);\r\n        data.append('action', 'get_user');\r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: data })\r\n            .then(res => res.json())    \r\n            .then(\r\n                (res) => {\r\n                    if( res.result === 'error' ){\r\n                        console.error('не удалось получить данные пользователя')\r\n                    }\r\n                    else{\r\n                        sessionStorage.setItem('CH_user', JSON.stringify(res));\r\n                    }\r\n                    return true;\r\n                },\r\n                (error) => {\r\n                    //....    \r\n                }\r\n            )\r\n        return false\r\n    }\r\n\r\n    formatsList(formats){\r\n        let output = [];\r\n        for(let f in formats){\r\n            let n = formats[f];\r\n            output.push({\r\n                id: n.id,\r\n                name: n.fototype +' '+ n.size,\r\n            })\r\n        }\r\n        return output;\r\n    }\r\n\r\n    get id(){\r\n        const data = this.cookieChecker();\r\n        if( !data )\r\n            return 'Ошибка';\r\n        return data.id;\r\n    }\r\n    get name(){\r\n        const data = this.cookieChecker();\r\n        if( !data )\r\n            return 'Ошибка';\r\n        return data.displayName;\r\n    }\r\n    get date(){\r\n        const data = this.cookieChecker();\r\n        if( !data )\r\n            return 'Ошибка';\r\n        return data.date;\r\n    }\r\n    get cartTotal(){\r\n        const cart = this.getCart();\r\n        if(cart)\r\n            return cart.total;\r\n        else\r\n            return 0;\r\n    }\r\n    get cartCount(){\r\n        const cart = this.getCart();\r\n        if(cart)\r\n            return cart.count;\r\n        else\r\n            return 0;\r\n    }\r\n    get formats(){\r\n        const data = this.cookieChecker();\r\n        if( !data )\r\n            return 'Ошибка';\r\n        return data.formats;\r\n    }\r\n}\r\n\r\nexport {User}","import React from 'react'\r\nimport './style.sass'\r\nimport Img from '../../../images/demo.png'\r\nimport {Notice} from '../../notice'\r\nimport {User} from '../../user'\r\n\r\nconst u = new User();\r\n\r\nclass Image extends React.Component{\r\n\r\n    state = {\r\n        size: 'vert',\r\n        isCurrent: this.props.currentSteck,\r\n        orderItem: {\r\n            itemTitle: this.props.item[0],\r\n            itemPath: this.props.item[1],\r\n            formats: this.props.f\r\n        },\r\n    }\r\n\r\n    handleDoImageFormat = (e) => {\r\n        const id = e.target.dataset.id;\r\n        const action = e.target.dataset.action;\r\n        let f = this.state.orderItem;\r\n        if( action === 'add'){\r\n            f.formats[id].qty++;\r\n            this.setState({orderItem: f});\r\n        }\r\n        else{\r\n            f.formats[id].qty > 0 && f.formats[id].qty--;\r\n            this.setState({orderItem: f});\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        if(this.props.currentSteck){\r\n            this.setState({\r\n                isCurrent: true\r\n            })\r\n            this.props.setStepFunc(3);\r\n            for( let f in this.state.orderItem.formats ){\r\n                let j = this.state.orderItem;\r\n                j.formats[f].qty = 0;\r\n                this.setState({orderItem: j})\r\n            }\r\n        }\r\n    }\r\n\r\n    handleRemove = () => {\r\n        this.setState({\r\n            isCurrent: false\r\n        })\r\n        this.props.setStepFunc(2);\r\n    }\r\n\r\n    handleAddToCart = () => {\r\n        u.addOrderItem(this.state.orderItem);\r\n        this.setState(\r\n            {\r\n                orderItem: {\r\n                    itemTitle: this.props.item[0],\r\n                    itemPath: this.props.item[1],\r\n                    formats: this.props.f\r\n                },\r\n                isCurrent: false\r\n            }\r\n        );\r\n    }\r\n\r\n    autoResize = (e) => {\r\n        let w = e.target.offsetWidth;\r\n        let h = e.target.offsetHeight;\r\n        if(w > h){\r\n            //e.target.closest('.foto-group__img').classList.add('horz');\r\n            //this.setState({size: 'horz'})\r\n            //e.target.closest('.foto-group__img-wrapper').style.paddingTop = '200px';\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(!this.props.currentSteck && this.state.isCurrent)\r\n            this.setState({ isCurrent: false });\r\n    }\r\n\r\n    render(){\r\n        const displayFormats = this.state.isCurrent && this.props.currentSteck ? true : false;\r\n        return(\r\n            <>\r\n                <img\r\n                    onClick={this.handleChange}\r\n                    onLoad={this.autoResize}\r\n                    className=\"yd-foto loading\"\r\n                    data-current={this.state.isCurrent}\r\n                    data-path={this.props.item[1]}\r\n                    data-title={this.props.item[0]}\r\n                    src={Img}\r\n                    alt=\"choose.ru\"\r\n                />\r\n                { displayFormats && <Formats\r\n                                        remove={this.handleRemove}\r\n                                        func={this.handleDoImageFormat}\r\n                                        addtocart={this.handleAddToCart}\r\n                                        formats={this.state.orderItem.formats}\r\n                                        { ...this.props }\r\n                                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction FormatItem(props){\r\n    const f = props.el;\r\n    return(\r\n        <div className=\"formats__item-wrapper\">\r\n            <div data-id={f.id}\r\n                    data-action=\"remove\"\r\n                    onClick={props.func}\r\n                    className=\"qty_mod qty_mod--remove\">-</div>\r\n            <div className=\"formats__item\">\r\n                <span className=\"formats__title\">{f.type}</span>\r\n                <span className=\"formats__size\">{f.size} (см)</span>\r\n                <span className=\"formats__cost\">\r\n                    {f.cost}.00 &nbsp;<span className=\"qty\">x{f.qty}</span>\r\n                </span>\r\n            </div>\r\n            <div data-id={f.id}\r\n                    data-action=\"add\"\r\n                    onClick={props.func}\r\n                    className=\"qty_mod qty_mod--add\">+</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass Formats extends React.Component{\r\n    \r\n    componentDidMount(){\r\n        document.body.style.overflow = 'hidden';\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.body.style.overflow = 'auto';\r\n    }\r\n    \r\n    render(){\r\n        let tpl = [];\r\n        const f = this.props.f;\r\n        let itemTotal = 0;\r\n        let itemTotalCount = 0;\r\n        let cartBtn = null;\r\n        for( let i in f ){\r\n            itemTotal += f[i].cost*f[i].qty;\r\n            itemTotalCount += f[i].qty;\r\n            tpl.push(<FormatItem key={i} func={this.props.func} el={f[i]} />)\r\n        }\r\n        if( itemTotal > 0 ){\r\n            this.props.setStepFunc(4);\r\n            cartBtn = <div onClick={this.props.addtocart} className=\"flex-center flex-column justify-center item-total__cart-icon\">\r\n                        <i className=\"fas fa-cart-plus mb5\"></i>\r\n                        <small>добавить в корзину</small>\r\n                      </div>\r\n        }else\r\n            this.props.setStepFunc(3);\r\n        return (\r\n            <div id=\"formats\">\r\n                <div className=\"formats-wrapper\">\r\n                    <div className=\"formats__item item-total d-flex\">\r\n                        <div className=\"flex-column item-total__wrapper\">\r\n                            <div className=\"d-flex justify-between\">\r\n                                <small>фото:&nbsp;</small>{itemTotalCount}\r\n                            </div>\r\n                            <div className=\"flex-center justify-between\">\r\n                                <small>на сумму:&nbsp;</small>\r\n                                <span>{itemTotal}&nbsp;<i className=\"fas fa-ruble-sign fons80\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        {cartBtn}\r\n                    </div>\r\n                    {tpl}\r\n                    <div onClick={this.props.remove} className=\"formats__item cancel\">ОТМЕНА</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass FotoGroupsItem extends React.Component{\r\n    state = {\r\n        currentSteck: false,\r\n        step: 2,\r\n    }\r\n    \r\n    handleMouseEnter = (e) => {\r\n        e.target.closest('.foto-group__img').classList.add('zoomed')\r\n    }\r\n    handleMouseLeave = (e) => {\r\n        e.target.closest('.foto-group__img').classList.remove('zoomed')\r\n    }\r\n    handleOpen = (e) => {\r\n        this.setState({currentSteck: true});\r\n    }\r\n    toggleCurrentSteck = (e) => {\r\n        this.setState({ currentSteck: false });\r\n        this.setStep(2);\r\n    }\r\n    componentWillUnmount(){\r\n        this.setState({\r\n            changedImagePath: null,\r\n            changedImageTitle: null,\r\n        })\r\n    }\r\n    setStep = (n) => {\r\n        if(n !== this.state.step){\r\n            let num = typeof(n) === 'number' ? n : n.target.dataset.updstep;\r\n            this.setState({ step: num })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let tpl = [];\r\n        this.props.fotos.reverse().forEach((el,i) => {\r\n            tpl.push(<Image\r\n                        key={i}\r\n                        item={el}\r\n                        currentSteck={this.state.currentSteck}\r\n                        setStepFunc={this.setStep}\r\n                        f={this.props.f}\r\n                    />)\r\n        })\r\n        if( this.state.currentSteck ){\r\n            return(\r\n                <>\r\n                    <div className=\"foto-group__img current-item\" data-stacked={this.props.stacked}>\r\n                        <div className=\"foto-group__img-wrapper\">\r\n                            {tpl}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"top-bar-optional\">\r\n                        <div\r\n                            className=\"flex-center flex-column top-bar__item\"\r\n                            data-updstep=\"2\"\r\n                            onClick={this.toggleCurrentSteck}\r\n                        >\r\n                            <button className=\"btn btn-outline-info\">\r\n                                <i className=\"fas fa-arrow-left\"></i>\r\n                            </button>\r\n                            <span>отмена</span>\r\n                        </div>\r\n                        <div className=\"bar__notice flex-center\">\r\n                            <DisplayStepCaption n={this.state.step} />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"foto-group__img\" data-stacked={this.props.stacked}>\r\n                    <div className=\"foto-group__img-wrapper\">\r\n                        {tpl}\r\n                    </div>\r\n                    <button\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseLeave={this.handleMouseLeave}\r\n                        className=\"zoom-foto\"><i className=\"fas fa-eye\"></i>\r\n                    </button>\r\n                    <button\r\n                        onClick={this.handleOpen}\r\n                        className=\"open-foto-options-btn\"><i className=\"fas fa-layer-group\"></i>\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction DisplayStepCaption(props){\r\n    if(props.n === 2)\r\n        return (<span className=\"\">Выберите фото</span>);\r\n    else if(props.n === 3)\r\n        return (<span className=\"\">Выберите формат</span>);\r\n    else if(props.n === 4)\r\n        return (<span className=\"\">Положите в корзину</span>);\r\n    else\r\n        return null;\r\n}\r\n\r\nfunction FotoGroup(props){\r\n    let tpl = [];\r\n    let stack = [];\r\n    let m = 3;\r\n    for( let i = 1 ; i <= props.items.length; i++ ){\r\n        stack.push(props.items[i-1]);\r\n        if( props.items.length < m ){\r\n            tpl.push( <FotoGroupsItem key={i} fotos={stack} stacked=\"0\" f={props.f} /> );\r\n            stack = [];\r\n        }\r\n        else{\r\n            if( i%m && i!==0 ){\r\n                \r\n            }\r\n            else{\r\n                tpl.push( <FotoGroupsItem key={i} fotos={stack} stacked=\"1\" f={props.f} /> );\r\n                stack = [];\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"foto-group\">\r\n            <div className=\"foto-group__title\">{props.title}</div>\r\n            <div className=\"foto-group__wrapper\">\r\n                {tpl}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction FotoGroups(props){\r\n    \r\n    if(props.drive === null)\r\n        return('');\r\n    \r\n    let tpl = [];\r\n    for( let group in props.drive.groups){\r\n        let g = props.drive.groups[group];\r\n        tpl.push(<FotoGroup key={group} title={group} items={g} f={props.f} />);\r\n    }\r\n    \r\n    return(\r\n        <div id=\"foto-groups\">\r\n            {tpl}\r\n        </div>\r\n    )\r\n}\r\n\r\nclass Collection extends React.Component {\r\n    state = {\r\n        drive: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        u.clear();\r\n        if(this.state.drive === null){\r\n            // получаем данные с диска\r\n            let formData = new FormData();\r\n            formData.append('user', this.props.post.post_author);\r\n            formData.append('session', this.props.post.ID);\r\n            formData.append('action', 'getgroups');\r\n            fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (res) => {\r\n                        if( res['result'] === 'error' ){\r\n                            this.setState({ notice: 'error' })\r\n                        }\r\n                        else if( res['result'] === 'ok' ){\r\n                            this.setState({\r\n                                drive: JSON.parse(res['message']),\r\n                                notice: null\r\n                            });\r\n                        }\r\n                        else{\r\n                            this.setState({ notice: 'error' })\r\n                        }\r\n                    },\r\n                    (error) => {\r\n                        this.setState({\r\n                            notice: 'error'\r\n                        });\r\n                    }\r\n                )\r\n            this.fotos = false;\r\n            this.loading = setInterval(\r\n                () => {\r\n                    const fotos = document.querySelectorAll('.yd-foto.loading');\r\n                    fotos.forEach((el,i) => {\r\n                        this.visible(el)\r\n                    })\r\n                },\r\n                1000\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.loading);\r\n        this.fotos = false;\r\n    }\r\n\r\n    visible = function (target) {\r\n        // Все позиции элемента\r\n        var targetPosition = {\r\n            top: window.pageYOffset + target.getBoundingClientRect().top,\r\n            left: window.pageXOffset + target.getBoundingClientRect().left,\r\n            right: window.pageXOffset + target.getBoundingClientRect().right,\r\n            bottom: window.pageYOffset + target.getBoundingClientRect().bottom\r\n          },\r\n          // Получаем позиции окна\r\n          windowPosition = {\r\n            top: window.pageYOffset,\r\n            left: window.pageXOffset,\r\n            right: window.pageXOffset + document.documentElement.clientWidth,\r\n            bottom: window.pageYOffset + document.documentElement.clientHeight\r\n          };\r\n      \r\n        if (targetPosition.bottom > windowPosition.top && // Если позиция нижней части элемента больше позиции верхней чайти окна, то элемент виден сверху\r\n          targetPosition.top < windowPosition.bottom && // Если позиция верхней части элемента меньше позиции нижней чайти окна, то элемент виден снизу\r\n          targetPosition.right > windowPosition.left && // Если позиция правой стороны элемента больше позиции левой части окна, то элемент виден слева\r\n          targetPosition.left < windowPosition.right) { // Если позиция левой стороны элемента меньше позиции правой чайти окна, то элемент виден справа\r\n          // Если элемент полностью видно, то запускаем следующий код\r\n          //console.clear();\r\n          this.uploadFoto(target, target.dataset.path);\r\n        } else {\r\n          // Если элемент не видно, то запускаем этот код\r\n          //console.clear();\r\n        };\r\n    };\r\n\r\n    uploadFoto(target, path){\r\n        target.classList.remove('loading');\r\n        let formData = new FormData();\r\n        formData.append('path', path);\r\n        formData.append('user', this.props.post.post_author);\r\n        formData.append('action', 'getpreview');\r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n            .then(res => res.json())\r\n            .then(\r\n                (res) => {\r\n                    if( res['result'] === 'error' ){\r\n                        //...\r\n                    }\r\n                    else if( res['result'] === 'ok' ){\r\n                        target.src = res['message'];\r\n                    }\r\n                    else{\r\n                        //...\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        notice: 'error'\r\n                    });\r\n                }\r\n            ) \r\n    }\r\n\r\n    goHome = () => {\r\n        if(window.confirm('При выходе из коллекции Ваша корзина будет сброшена.')){\r\n            this.props.setPageFunc('home')\r\n        }   \r\n    }\r\n\r\n    render(){\r\n        const g = this.state.drive;\r\n        return (\r\n            <section id=\"coll\" className=\"pb60\">\r\n                <Notice status={this.state.notice} />\r\n                <div className=\"top-bar\">\r\n                    <div onClick={this.goHome} id=\"go-home\" className=\"flex-center flex-column top-bar__item\">\r\n                        <button className=\"btn btn-outline-info\">\r\n                            <i class=\"fas fa-home\"></i>\r\n                        </button>\r\n                        <span>Выход</span>\r\n                    </div>\r\n                    <div id=\"master-contacts\" className=\"flex-center flex-column top-bar__item mra\">\r\n                        <button className=\"btn btn-outline-info\">\r\n                            <i className=\"far fa-address-book\"></i>\r\n                        </button>\r\n                        <span>Помощь</span>\r\n                    </div>\r\n                    <Cart sessionid={this.props.post.ID} author={this.props.post.post_author} />\r\n                </div>\r\n                <FotoGroups drive={g} f={this.props.post.formats} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport {Collection}\r\n\r\nclass Cart extends React.Component{\r\n    state = {\r\n        stage: 'close'\r\n    }\r\n\r\n    upd = () => {\r\n        this.setState({ mod: new Date().getTime() })\r\n    }\r\n\r\n    setStage_afterRequest = () => {\r\n        this.setState({\r\n            stage: 'thankyou'\r\n        })\r\n    }\r\n\r\n    setStage = (key) => {\r\n        this.setState({\r\n            stage: key.toString(),\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.checkCartCount = setInterval(() => {\r\n            this.setState({cartCount: u.cartCount});\r\n        }, 500);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.setState({\r\n            stage: 'close',\r\n        })\r\n        clearInterval(this.checkCartCount);\r\n    }\r\n\r\n    render(){\r\n        const cart = u.getCart();\r\n        let cartItems = [];\r\n        let displayItems = [];\r\n        if(cart !== undefined){\r\n            for( let item in cart.items ){\r\n                let [n, path] = [cart.items[item], cart.items[item].itemPath ];\r\n                if( cartItems[path] === undefined ){\r\n                    cartItems[path] = [];\r\n                }\r\n                if( n !== undefined ){\r\n                    for( let m in n.formats ){\r\n                        cartItems[path].push( <CartItem key={m +'-'+ item}\r\n                                                        path={path}\r\n                                                        format={n.formats[m]}\r\n                                                        upd={this.upd}\r\n                                                />)\r\n                    }\r\n                }\r\n            }\r\n            // Дополнительная итерация для вывода\r\n            for(let n in cartItems){\r\n                displayItems.push( cartItems[n] );\r\n            }    \r\n        }\r\n        \r\n        const checkoutBtn = <div onClick={() => this.setState({stage: 'checkout'})}\r\n                                 className=\"flex-center flex-column justify-center item-total__cart-icon\">\r\n                                {/* <i className=\"fas fa-money-check mb5\"></i> */}\r\n                                <small>оформить заказ</small>\r\n                            </div>;\r\n        \r\n        if( this.state.stage === 'open' ){\r\n            return(\r\n                <div id=\"cart-widget-open\" className=\"layer pb80\">\r\n                    {displayItems}\r\n                    <div className=\"formats__item item-total d-flex mt30\">\r\n                        <div className=\"flex-column item-total__wrapper\">\r\n                            <div className=\"d-flex justify-between\">\r\n                                <i className=\"fas fa-portrait fons80\"></i>&nbsp;<span >{u.cartCount}&nbsp;<small>шт.</small></span>\r\n                            </div>\r\n                            <div className=\"flex-center justify-between\">\r\n                                <i className=\"fas fa-coins fons80\"></i>&nbsp;\r\n                                <span>{u.cartTotal}&nbsp;<i className=\"fas fa-ruble-sign fons80\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        {u.cartTotal > 0 && checkoutBtn}\r\n                    </div>\r\n                    <Bar setstage={this.setStage} stage={this.state.stage} />\r\n                </div>\r\n            )\r\n        }\r\n        else if(this.state.stage === 'checkout' || this.state.stage === 'thankyou' || this.state.stage === 'error'){\r\n            return(\r\n                <div id=\"cart-widget-open\" className=\"layer pb80\">\r\n                    <CheckoutForm\r\n                        setStage={this.setStage}\r\n                        sessionid={this.props.sessionid}\r\n                        authorID={this.props.author}\r\n                    />\r\n                    <Bar setstage={this.setStage} stage={this.state.stage} />\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div onClick={() => this.setStage('open')} id=\"minicart-widget\" className=\"flex-center flex-column top-bar__item\">\r\n                    <button className=\"btn btn-outline-info\"><i className=\"fas fa-shopping-cart\"></i></button>\r\n                    <span>Корзина</span>\r\n                    <span className=\"badge badge-pill badge-primary\">{this.state.cartCount}</span>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nfunction Bar(props){\r\n    let { setstage, btn, notice } = '';\r\n    if(props.stage === 'open' && u.cartTotal > 0){\r\n        setstage = 'close';\r\n        notice = 'Проверьте заказ и перейдите к оплате';\r\n        btn = 'закрыть';\r\n    }\r\n    else if(props.stage === 'open' && u.cartTotal === 0){\r\n        setstage = 'close';\r\n        notice = 'Корзина пуста';\r\n        btn = 'закрыть';\r\n    }\r\n    else if(props.stage === 'checkout'){\r\n        setstage = 'open';\r\n        notice = 'Заполните форму заказа';\r\n        btn = 'в корзину';\r\n    }\r\n    else if(props.stage === 'thankyou'){\r\n        setstage = 'close';\r\n        btn = 'закрыть';\r\n        notice = 'СПАСИБО!';\r\n    }\r\n    else if(props.stage === 'error'){\r\n        setstage = 'open';\r\n        notice = 'Ошибка сервера! Попробуйте позже.';\r\n        btn = 'в корзину';\r\n    }\r\n\r\n    return(\r\n        <div className=\"top-bar\">\r\n            <div className=\"flex-center flex-column top-bar__item\"\r\n                onClick={() => props.setstage(setstage)}>\r\n                <button className=\"btn btn-outline-info\">\r\n                    <i className=\"fas fa-arrow-left\"></i>\r\n                </button>\r\n                <span>{btn}</span>\r\n            </div>\r\n            <div className=\"bar__notice flex-center\">\r\n                {notice}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CartItem(props){\r\n    const f = props.format;\r\n    return(\r\n        <div className=\"cart-item__wrapper\">\r\n            <div className=\"cart-item__img\">\r\n                <img\r\n                    className=\"yd-foto loading\"\r\n                    data-path={props.path}\r\n                    data-title={''}\r\n                    src={Img}\r\n                    alt=\"choose.ru\"\r\n                />\r\n            </div>\r\n            <div className=\"cart-item__info\">\r\n                <span><small>Тип:</small> {f.fototype}</span>\r\n                <span><small>Формат:</small> {f.size}</span>\r\n                <span><small>Цена:</small> {f.cost}.0</span>\r\n                <span><small>Кол-во:</small> {f.qty}</span>\r\n                <span><small>Итого:</small> {f.cost*f.qty}.0 <i className=\"fons80 fas fa-ruble-sign\"></i></span>\r\n            </div>\r\n            <div className=\"cart-item__controlls\">\r\n                <div className=\"formats__item-wrapper\">\r\n                    <div data-id={f.id}\r\n                            data-action=\"remove\"\r\n                            data-path={props.path}\r\n                            onClick={(e) => {u.updateOrderItem(e.target); props.upd()}}\r\n                            className=\"qty_mod qty_mod--remove\">-</div>\r\n                    <div className=\"btn btn-outline-secondary btn-sm\"\r\n                         data-id={f.id}\r\n                         data-action=\"delete\"\r\n                         data-path={props.path}\r\n                         onClick={(e) => {u.updateOrderItem(e.target); props.upd()}}>\r\n                        Удалить все копии\r\n                    </div>\r\n                    <div data-id={f.id}\r\n                            data-action=\"add\"\r\n                            data-path={props.path}\r\n                            onClick={(e) => {u.updateOrderItem(e.target); props.upd()}}\r\n                            className=\"qty_mod qty_mod--add\">+</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass CheckoutForm extends React.Component{\r\n\r\n    state = {\r\n        formReady: false,\r\n        addOrder_Result: false\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n        \r\n        this.validateForm(e.target.closest('form'));\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.notice === 'loading'){\r\n            return;\r\n        }\r\n        this.setState({ notice: 'loading' });\r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: this.prepareOrderData() })\r\n            .then(res => res.json())\r\n            .then(\r\n                (res) => {\r\n                    if( res.result !== 'error' ){\r\n                        this.setState({\r\n                            addOrder_Result: res.message,\r\n                            notice: null\r\n                        });\r\n                        u.clear();\r\n                        this.props.setStage('thankyou');\r\n                    }\r\n                    else{\r\n                        this.setState({notice: null});\r\n                        this.props.setStage('error');\r\n                    }\r\n                },\r\n                // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n                // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n                (error) => {\r\n                    this.setState({\r\n                        error: error + ': Сервер не отвечает',\r\n                        notice: 'error'\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    prepareOrderData = () => {\r\n        let [fd, m] = [ new FormData(), this.formData ];\r\n        for(let key in m){\r\n            fd.append(key, m[key])\r\n        }\r\n        fd.append('cart', JSON.stringify(u.getCart()));\r\n        fd.append('action', 'addorder');\r\n        fd.append('user', this.props.authorID);\r\n        fd.append('sessionid', this.props.sessionid);\r\n\r\n        return fd;\r\n    }\r\n\r\n    validateForm = (formObject) => {\r\n        const data = new FormData(formObject);\r\n        // Список пар ключ/значение\r\n        let updData = {};\r\n        let formValid = true;\r\n        for(let [name, value] of data) {\r\n            if(value === '')\r\n                formValid = false;\r\n            updData[name] = value;\r\n        }\r\n        this.formData = updData;\r\n        if( formValid && updData.confirm !== undefined )\r\n            this.setState({formReady: true});\r\n        else\r\n            this.setState({formReady: false});\r\n    }\r\n\r\n    render(){\r\n        const {formReady,username,phone,email,payment} = this.state\r\n\r\n        if(this.state.addOrder_Result){\r\n            if(this.state.addOrder_Result > 0){\r\n                return(\r\n                    <div id=\"checkout\" className=\"p15\">\r\n                        <p className=\"mt40\">Заказ успешно оформлен</p>\r\n                        <p>Номер вашего заказа #{this.state.addOrder_Result}</p>\r\n                    </div>\r\n                )\r\n            }\r\n            else if(this.state.addOrder_Result === 0){}\r\n                return(\r\n                    <div id=\"checkout\" className=\"p15\">\r\n                        <p className=\"mt40\">При оформлении заказа произошла оишбка. Пожалуйста, попробуйте ещё раз. Приносим извинения за неудобства.</p>\r\n                    </div>\r\n                )\r\n        }\r\n\r\n        return(\r\n            <div id=\"checkout\" className=\"p15\">\r\n                <div className=\"flex-column item-total__wrapper\">\r\n                    <div className=\"flex-center justify-between\">\r\n                        <i className=\"fas fa-portrait fons80\"></i>&nbsp;<span>{u.cartCount}&nbsp;<small>шт.</small></span>\r\n                    </div>\r\n                    <div className=\"flex-center justify-between\">\r\n                        <i className=\"fas fa-coins fons80\"></i>&nbsp;\r\n                        <span>{u.cartTotal}&nbsp;<i className=\"fas fa-ruble-sign fons80\"></i></span>\r\n                    </div>\r\n                </div>\r\n                <h5 className=\"\">- Контактные данные</h5>\r\n                <form id=\"checkout-form\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\">ФИО</span>\r\n                            </div>\r\n                            <input onChange={this.handleChange} value={username} name=\"username\" type=\"text\" className=\"form-control\" placeholder=\"Иванов Иван И.\" required />    \r\n                        </div>\r\n                        <small>Как к Вам обращаться</small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\">Тел</span>\r\n                            </div>\r\n                            <input onChange={this.handleChange} value={phone} name=\"phone\" type=\"text\" className=\"form-control\" placeholder=\"+7 (999) 999-99-99\" required />    \r\n                        </div>\r\n                        <small>Для связи при необходимости</small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\">@</span>\r\n                            </div>\r\n                            <input onChange={this.handleChange} vakue={email} name=\"email\" type=\"text\" className=\"form-control\" placeholder=\"email@mail.com\" required />    \r\n                        </div>\r\n                        <small>Для получения цифровых копий</small>\r\n                    </div>\r\n\r\n                    <h5 className=\"mt20\">- Выберите способ оплаты</h5>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"custom-control custom-radio\">\r\n                            <input type=\"radio\" id=\"customRadio1\" value=\"sberbank\" name=\"payment\" className=\"custom-control-input\" checked={payment} defaultChecked={true} />\r\n                            <label className=\"custom-control-label\" htmlFor=\"customRadio1\">СБЕР-БАНК</label>\r\n                        </div>\r\n                        <div className=\"custom-control custom-radio\">\r\n                            <input type=\"radio\" id=\"customRadio3\" value=\"another-bank\" name=\"payment\" className=\"custom-control-input\" disabled />\r\n                            <label className=\"custom-control-label\" htmlFor=\"customRadio3\">Другой банк</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <div className=\"custom-control custom-checkbox\">\r\n                            <input onChange={this.handleChange} name=\"confirm\" type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" defaultChecked={true} />\r\n                            <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\r\n                                Даю согласие на обработку персональных данных в соответствии с <a href=\"#\">политикой конфиденциальности</a>.\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button\r\n                        className=\"btn btn-primary btn-lg d-block mt40 mxa\"\r\n                        disabled={!formReady}>\r\n                            {this.state.notice === 'loading' ? <i className=\"fas fa-spinner animation-rotate\"></i> : 'Оплатить'}\r\n                    </button>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useRef, useLayoutEffect, useState } from \"react\";\r\nimport { Notice } from '../notice'\r\nimport { User } from '../user'\r\n//import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// import { faShieldVirus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst user = new User();\r\n\r\nfunction Modal(props){\r\n    \r\n    const targetRef = useRef();\r\n    const [dimensions, setDimensions] = useState({ top:0, left: 0 });\r\n\r\n    // useLayoutEffect(() => {\r\n    //     if (targetRef.current) {\r\n    //         const ww = window.innerWidth,\r\n    //               mw = targetRef.current.closest('#main').offsetWidth;\r\n    //         setDimensions({\r\n    //             top: 100,\r\n    //             left: (ww - mw) / 2,\r\n    //         });\r\n    //     }\r\n    // }, []);\r\n    if( !props.open ){\r\n        return null\r\n    }\r\n    return(\r\n        <div className=\"modal open\">\r\n            <div className=\"modal-dialog\" ref={targetRef} role=\"document\"\r\n                 style={{top: dimensions.top, left: dimensions.left}}>\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">{props.title}</h5>\r\n                        <button onClick={props.close} type=\"button\" className=\"close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        {props.children}\r\n                    </div>\r\n                    {props.footer && <div className=\"modal-footer\">props.footer</div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Modal }\r\n\r\nclass ChForm extends React.Component{\r\n\r\n    state = {\r\n        notice: ''\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        // Create html query\r\n        let formData = new FormData(e.target);\r\n        formData.append('user', user.id);\r\n        formData.append('action', this.props.action);\r\n        if(this.props.action === 'updpost' || this.props.action === 'updterm' || this.props.action === 'updformat')\r\n            formData.append('id', this.props.item !== null ? this.props.item.id : 0)\r\n        // Display loading notice\r\n        this.setState({notice: 'loading'});\r\n        // Create Fetch\r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n            .then(res => res.json())\r\n            .then(\r\n                (res) => {\r\n                    this.props.success()\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        notice: 'error'\r\n                    });\r\n                    console.log(error)\r\n                }\r\n            )\r\n    }\r\n\r\n    render(){\r\n        const initialValues = {};\r\n        this.props && this.props.fields.forEach((el,i) => {\r\n            initialValues[el.name] = el.init !== null ? el.init : '';\r\n        })\r\n        const form =\r\n            <div className=\"row\">\r\n                <form className=\"col-12\" onSubmit={this.submit}>\r\n                    <div className=\"row\">\r\n                    {\r\n                        this.props.fields.map((el) =>\r\n                            <div className={\"form-group col-\" + el.col} key={el.fieldname}>\r\n                                <label htmlFor={el.fieldname}>{el.label}</label>\r\n                                <Input el={el} onChangeFunc={this.handleChange} item={this.props.item}/>\r\n                                <small className=\"form-text text-muted\">{el.caption}</small>\r\n                            </div>\r\n                        )\r\n                    }\r\n                        <div className=\"col-12\">\r\n                            <button type=\"submit\" disabled={this.state.isSubmitting} className=\"btn btn-primary btn-block\">\r\n                                Сохранить\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n                \r\n        \r\n        if( this.props.type === 'modal' ){\r\n            return(\r\n                <React.Fragment>\r\n                    <Modal\r\n                        open={this.props.open}\r\n                        title={getTitle( this.props.action )}\r\n                        close={this.props.close}>\r\n                            {form}\r\n                    </Modal>\r\n                    <Notice status={this.state.notice} />\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        return('')\r\n    }\r\n}\r\n\r\nexport { ChForm }\r\n\r\nfunction getTitle(action){\r\n    if( action === 'addterm' ){\r\n        return 'Добавить группу'\r\n    }\r\n    else if( action === 'updterm' ){\r\n        return 'Настройки группы'\r\n    }\r\n    else if( action === 'addpost' ){\r\n        return 'Добавить сессию'\r\n    }\r\n    else if( action === 'updpost' ){\r\n        return 'Настройки сессии'\r\n    }\r\n    else if( action === 'updformat' ){\r\n        return 'Настройки формата'\r\n    }\r\n    else if( action === 'addformat' ){\r\n        return 'Добавить формат'\r\n    }\r\n    else{\r\n        return 'Undefined';\r\n    }\r\n}\r\n\r\nfunction Input(props) {\r\n    const el = props.el;\r\n    if(el.type === 'select'){\r\n        let options = el.options.map((option) =>\r\n            <option key={option.id} value={option.id}>{option.name}</option>\r\n        )\r\n        return(\r\n            <select\r\n                onChange={props.handleChange}\r\n                disabled={!el.editable}\r\n                required={el.required}\r\n                className=\"form-control\"\r\n                multiple={el.multiple}\r\n                type={el.type}\r\n                as={el.type}\r\n                name={el.fieldname}\r\n                defaultValue={el.init}\r\n            >\r\n            {options}\r\n            </select>)\r\n    }\r\n    else if(el.type === 'checkbox'){\r\n        return(\r\n            <input\r\n                onChange={props.handleChange}\r\n                disabled={!el.editable}\r\n                required={el.required}\r\n                className=\"form-control\"\r\n                type={el.type}\r\n                name={el.fieldname}\r\n                defaultChecked={el.init}\r\n            />\r\n        )\r\n    }\r\n    else if(el.type === 'file'){\r\n        return(\r\n            <input\r\n                onChange={props.handleChange}\r\n                disabled={!el.editable}\r\n                required={el.required}\r\n                className=\"form-control\"\r\n                type={el.type}\r\n                name={el.fieldname}\r\n            />\r\n        )\r\n    }\r\n    else if(el.type === 'textarea'){\r\n        return(\r\n            <textarea\r\n                onChange={props.handleChange}\r\n                disabled={!el.editable}\r\n                required={el.required}\r\n                className=\"form-control\"\r\n                rows=\"4\"\r\n                as={el.type}\r\n                name={el.fieldname}>\r\n            </textarea>\r\n        )\r\n    }\r\n    else if(el.type === 'formatsList'){\r\n        return(<FormatsList formatsChanged={props.item && props.item.formats} />)\r\n    }\r\n    else{\r\n        return(\r\n            <input\r\n                onChange={props.handleChange}\r\n                disabled={!el.editable}\r\n                required={el.required}\r\n                className=\"form-control\"\r\n                type={el.type}\r\n                name={el.fieldname}\r\n                defaultValue={el.init}\r\n            />  \r\n        )\r\n    }\r\n}\r\n\r\nclass FormatsList extends React.Component{\r\n\r\n    state = {\r\n        formats: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        let formData = new FormData();\r\n        formData.append('user', user.id);\r\n        formData.append('action', 'getformats');\r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n            .then(res => res.json())    \r\n            .then(\r\n                (res) => {\r\n                    this.setState({\r\n                        formats: res\r\n                    })\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        formats: []\r\n                    })\r\n                }\r\n            )\r\n    }\r\n\r\n    isChecked = (id) => {\r\n        let is = false;\r\n        this.props.formatsChanged && this.props.formatsChanged.forEach(el => {\r\n            if(el == id) is = true; \r\n        })\r\n        return is;\r\n    }\r\n\r\n    render(){\r\n        const formats = user.formatsList(this.state.formats).map(f =>\r\n            <div key={f.id} className=\"form-check\">\r\n                <input\r\n                    id={f.id}\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    name=\"format[]\"\r\n                    value={f.id}\r\n                    defaultChecked={this.isChecked(f.id)}\r\n                />\r\n                {f.name}\r\n            </div>\r\n        )\r\n        if(formats.length === 0){\r\n            return(\r\n                <div class=\"alert alert-dismissible alert-danger\">\r\n                <strong>Важно!</strong> для добавлении сессии Вам нужно добавить хотя бы один формат.\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div className=\"formats-list\">\r\n                <p>Форматы</p>\r\n                <div className=\"formats-list__wrapper\">\r\n                    {formats}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {User} from '../../user'\r\nimport {ChForm} from '../../modals/modal'\r\nimport {Notice} from '../../notice'\r\n\r\nconst user = new User();\r\n\r\nclass GroupsTab extends React.Component{\r\n\r\n    state = {\r\n        groups: [],\r\n        openForm: false,\r\n        group: null,\r\n        upd: new Date().toLocaleString(),\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.upd();\r\n    }\r\n\r\n    upd = () => {\r\n        this.setState({notice: 'loading'})\r\n\r\n        // Create html query\r\n        let formData = new FormData();\r\n        formData.append('user', user.id);\r\n        formData.append('action', 'getterms');\r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n            .then(res => res.json())    \r\n            .then(\r\n                (res) => {\r\n                    if( res.result === 'error' ){\r\n                        this.setState({\r\n                            notice: 'error'\r\n                        });\r\n                    }\r\n                    else{\r\n                        this.setState(\r\n                            { \r\n                                groups: res,\r\n                                upd: new Date().toLocaleString(),\r\n                                notice: null\r\n                            }\r\n                        )\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        notice: 'error'\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    ifSuccess = () => {\r\n        this.setState(\r\n            {\r\n                modalAction: 'add',\r\n                notice: null,\r\n                openForm: false,\r\n            },\r\n            this.upd()\r\n        )\r\n    }\r\n\r\n    displayModal = (e) => {\r\n        this.setState(\r\n            {\r\n                openForm: true,\r\n                modalAction: 'addterm'\r\n            }\r\n        );\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ openForm: false })\r\n    }\r\n\r\n    displayUpdModal = (e) => {\r\n        const id = e.target.closest('.btn').dataset.id;\r\n        let group = false;\r\n        this.state.groups.forEach((el,i) => {\r\n            if(el.id === +id){\r\n                group = el;\r\n            }\r\n        })\r\n        this.setState(\r\n            {\r\n                openForm: true,\r\n                modalAction: 'updterm',\r\n                group: group,\r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n        const groups = this.state.groups;\r\n        const item = this.state.group;\r\n        const lustUpdTime = this.state.upd;\r\n        const table = groups.map((row) => \r\n                <TableRow\r\n                    key={row.id}\r\n                    row={row}\r\n                    upd={this.upd}\r\n                    displayUpdModal={this.displayUpdModal}\r\n                />)\r\n        const fields = [\r\n            {\r\n                editable: true,\r\n                required: true,\r\n                label: 'Заголовок',\r\n                type: 'text',\r\n                col: 12,\r\n                fieldname: 'title',\r\n                caption: 'До 30 символов',\r\n                init: item ? item.name : ''\r\n            },\r\n            {\r\n                editable: true,\r\n                required: false,\r\n                label: 'Заметка',\r\n                type: 'textarea',\r\n                col: 12,\r\n                fieldname: 'comment',\r\n                caption: 'До 300 символов',\r\n                init: item ? item.comment : ''\r\n            },\r\n            {\r\n                editable: false,\r\n                required: false,\r\n                label: 'Пароль',\r\n                type: 'text',\r\n                col: 6,\r\n                fieldname: 'password',\r\n                caption: 'Создаётся автоматически',\r\n                init: item ? item.password : ''\r\n            },\r\n        ]\r\n        const form = this.state.openForm\r\n            && <ChForm\r\n                type=\"modal\"\r\n                open={this.state.openForm}\r\n                action={this.state.modalAction}\r\n                close={this.closeModal}\r\n                success={this.ifSuccess}\r\n                fields={fields}\r\n                item={item}\r\n                />\r\n        return(\r\n            <div id=\"groups-tab\" className=\"main-tab\">\r\n                <div className=\"tab_header display-flex justify-between mb1\">\r\n                    <small className=\"text-muted\">upd: { lustUpdTime }</small>\r\n                    <button\r\n                        onClick={this.displayModal}\r\n                        className=\"btn btn-outline-primary btn-sm\"\r\n                    >Добавить группу</button>\r\n                </div>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr className=\"table-dark\">\r\n                            <th>ID</th>\r\n                            <th>Название</th>\r\n                            <th>Сессии</th>\r\n                            <th>Заметки</th>\r\n                            <th>Опции</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {table}\r\n                    </tbody>\r\n                </table>\r\n                \r\n                {form}\r\n                \r\n                <Notice status={this.state.notice} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TableRow extends React.Component{\r\n    render(){\r\n        const g = this.props.row;\r\n        return(\r\n            <tr>\r\n                <td>{g.id}</td>\r\n                <td>{g.name}</td>\r\n                <td>{g.count}</td>\r\n                <td style={{maxWidth: '100px', lineHeight: 1}}><small>{g.comment}</small></td>\r\n                {/* <td>{g.options}</td> */}\r\n                <td>\r\n                    <RowOptions id={g.id}\r\n                        upd={this.props.upd}\r\n                        displayUpdModal={this.props.displayUpdModal}\r\n                    />\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nclass RowOptions extends React.Component{\r\n\r\n    state = {\r\n        notice: null\r\n    }\r\n\r\n    removeTerm = (e) => {\r\n        const m = e.target.closest('.btn');\r\n        const termid = m.dataset.id;\r\n        this.setState({notice: 'loading'});\r\n        let formData = new FormData();\r\n        formData.append('user', user.id);\r\n        formData.append('action', 'delete_term');\r\n        formData.append('termid', termid);\r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n            .then(res => res.json())    \r\n            .then(\r\n                (res) => {\r\n                    if(res.message === 200){\r\n                        this.props.upd();\r\n                        this.setState({notice: null});\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        error: error + ': Сервер не отвечает',\r\n                        notice: 'error'\r\n                    });\r\n                }\r\n            )    \r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <button\r\n                    onClick={this.props.displayUpdModal}\r\n                    data-id={this.props.id}\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-info mr2\"\r\n                    data-toggle=\"tooltip\"\r\n                    data-placement=\"top\"\r\n                    title=\"Настройки группы\"\r\n                    data-original-title=\"Настройки группы\"\r\n                >\r\n                    <i className=\"fas fa-cog\"></i>\r\n                </button>\r\n                <button\r\n                    onClick={this.removeTerm}\r\n                    data-id={this.props.id}\r\n                    data-action=\"delete_term\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-danger mr2\"\r\n                    data-toggle=\"tooltip\"\r\n                    data-placement=\"top\"\r\n                    title=\"Удалить группу\"\r\n                    aria-describedby=\"tooltip738184\"\r\n                    data-original-title=\"Удалить группу\"\r\n                >\r\n                    <i  className=\"far fa-times-circle\"></i>\r\n                </button>\r\n                <Notice status={this.state.notice} /> \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport { GroupsTab }","\r\nlet accountTips = [];\r\n\r\naccountTips['collections'] = [\r\n    '<strong>Разделы</strong> внутри сессий создаются Вами в папке сессии на Диске. И хотя, их количество не ограничено мы не рекомендуем слишком сильно дробить сессию.',\r\n    'Если Вы <strong>удалили сессию</strong> на Диске вручную, а здесь она отображается, Вы можете добавить папку сессии на Диск с тем же названием, обновить фото и они снова будут связаны.',\r\n    'Кнопка <i className=\"fas fa-sync-alt text-success\"></i> - сверяет <strong>разделы и фото</strong> на Вашем Диске с сессией. Не забывайте ей пользоваться при изменении файлов и папок на Диске, чтобы показывать клиентам актуальные наборы фото.',\r\n]\r\n\r\nexport {accountTips};","import React, { useRef, useLayoutEffect, useState } from \"react\";\r\nimport { Children } from \"react\";\r\nimport {accountTips} from '../components/account-tips';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { extend } from \"jquery\";\r\n\r\n\r\n\r\nclass Tips extends React.Component{\r\n    state = {\r\n        open: true,\r\n        tip: '',\r\n    }\r\n\r\n    randomTip(){\r\n        let tips = accountTips[this.props.index];\r\n        if(tips !== undefined){\r\n            let index = randomInteger( 0, tips.length )\r\n            return tips[index];\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const tip = this.randomTip();\r\n        \r\n        if(!this.state.open || !tip)\r\n            return null;\r\n\r\n        return(\r\n            <div key={this.props.index} className=\"toast show\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n                <div className=\"toast-header\">\r\n                    <strong className=\"mr-auto\">Подсказки:</strong>\r\n                    <small>{''}</small>\r\n                    <button onClick={() => this.setState({open: false})} type=\"button\" className=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"toast-body\">\r\n                    <p dangerouslySetInnerHTML={{__html: tip}} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction randomInteger(min, max) {\r\n  let rand = min + Math.random() * (max + 1 - min);\r\n  return Math.floor(rand);\r\n}\r\n\r\nexport {Tips}\r\n\r\nclass InlineTips extends React.Component{\r\n    state = {\r\n        open: false\r\n    }\r\n\r\n    render(){\r\n        if(this.state.open){\r\n            return(\r\n                <div className=\"inline-tip card border-warning mt100 mxa\">\r\n                    <div className=\"card-header\">{this.props.title}<button onClick={() => this.setState({open: false})} type=\"button\" className=\"close\" data-dismiss=\"alert\">&times;</button></div>\r\n                    <div className=\"card-body\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div onClick={() => this.setState({open: true})} className=\"inline-tips-starter\">\r\n                    <FontAwesomeIcon icon=\"info-circle\" />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport {InlineTips}","import React from 'react'\r\nimport {User} from '../../user'\r\nimport {ChForm} from '../../modals/modal'\r\nimport {Notice} from '../../notice'\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { InlineTips } from '../../helper';\r\n\r\nconst user = new User();\r\n\r\nclass CollectionTab extends React.Component{\r\n\r\n    state = {\r\n        posts: [],\r\n        groupsList: false,\r\n        openForm: false,\r\n        post: null,\r\n        upd: new Date().toLocaleString(),\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.upd();\r\n    }\r\n\r\n    upd = () => {\r\n        this.setState({notice: 'loading'})\r\n\r\n        // Create html query\r\n        let formData = new FormData();\r\n        formData.append('user', user.id);\r\n        formData.append('action', 'getposts');\r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n            .then(res => res.json())    \r\n            .then(\r\n                (res) => {\r\n                    if( res.result === 'error' ){\r\n                        this.setState({\r\n                            notice: 'error'\r\n                        });\r\n                    }\r\n                    else{\r\n                        this.setState(\r\n                            { \r\n                                posts: res,\r\n                                upd: new Date().toLocaleString(),\r\n                                notice: null\r\n                            }\r\n                        )\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        notice: 'error'\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    ifSuccess = () => {\r\n        this.setState(\r\n            {\r\n                modalAction: 'add',\r\n                notice: null,\r\n                openForm: false,\r\n            },\r\n            this.upd()\r\n        )\r\n    }\r\n\r\n    displayModal = (e) => {\r\n        this.setState(\r\n            {\r\n                openForm: true,\r\n                modalAction: 'addpost'\r\n            }\r\n        );\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ openForm: false })\r\n    }\r\n\r\n    displayUpdModal = (e) => {\r\n        const id = e.target.closest('.btn').dataset.id;\r\n        let post = false;\r\n        this.state.posts.forEach((el,i) => {\r\n            if(el.id === +id){\r\n                post = el;\r\n            }\r\n        })\r\n        this.setState(\r\n            {\r\n                openForm: true,\r\n                modalAction: 'updpost',\r\n                post: post,\r\n            }\r\n        );\r\n    }\r\n\r\n    getUserGroupsSelectOptions = () => {\r\n        // Если группы уже получены\r\n        if( this.state.groupsList )\r\n            return this.state.groupsList;\r\n        \r\n        let formData = new FormData();\r\n        let groupsList = [{ id: 1, name: 'Выберите группу' }];\r\n        formData.append('user', user.id);\r\n        formData.append('action', 'getterms');\r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n            .then(res => res.json())    \r\n            .then(\r\n                (res) => {\r\n                    res.forEach((g) =>\r\n                        groupsList.push({\r\n                            id: g.id,\r\n                            name: g.name\r\n                        })  \r\n                    )\r\n                    this.setState({groupsList: groupsList})\r\n                },\r\n                (error) => {\r\n                    // ...\r\n                }\r\n            )        \r\n        return groupsList;\r\n    }\r\n\r\n    render(){\r\n\r\n        if(user.formats.length === 0){\r\n            return(\r\n                <div className=\"alert alert-inline alert-warning\">\r\n                    <h4 className=\"alert-heading\">Важно!</h4>\r\n                    <p className=\"mb-0\">Пожалуйста, прежде чем создавать сессии, добавьте хотя бы один <strong>формат</strong>.</p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const posts = this.state.posts;\r\n        const item = this.state.post;\r\n        const lustUpdTime = this.state.upd;\r\n        const table = posts.map((row) => \r\n                <TableRow\r\n                    key={row.id}\r\n                    row={row}\r\n                    upd={this.upd}\r\n                    displayUpdModal={this.displayUpdModal}\r\n                />)\r\n        let fields = [\r\n            {\r\n                editable: true,\r\n                required: true,\r\n                label: 'Заголовок',\r\n                col: 12,\r\n                type: 'text',\r\n                fieldname: 'title',\r\n                caption: 'До 30 символов',\r\n                init: item ? item.name : ''\r\n            },\r\n            {\r\n                editable: true,\r\n                required: true,\r\n                label: 'Группа',\r\n                col: 6,\r\n                type: 'select',\r\n                options: this.getUserGroupsSelectOptions(),\r\n                fieldname: 'group',\r\n                caption: '',\r\n                init: item ? item.groupid : ''\r\n            },\r\n            {\r\n                editable: false,\r\n                required: false,\r\n                label: 'Пароль',\r\n                col: 6,\r\n                type: 'text',\r\n                fieldname: 'password',\r\n                caption: 'Создаётся автоматически',\r\n                init: item ? item.password : ''\r\n            },\r\n            {\r\n                type: 'formatsList',\r\n                col: 12,\r\n                fieldname: 'Форматы'\r\n            },\r\n        ]\r\n        const form = this.state.openForm\r\n            && <ChForm\r\n                type=\"modal\"\r\n                open={this.state.openForm}\r\n                action={this.state.modalAction}\r\n                close={this.closeModal}\r\n                success={this.ifSuccess}\r\n                fields={fields}\r\n                item={item}\r\n                />\r\n        return(\r\n            <div id=\"collections-tab\" className=\"main-tab\">\r\n                <div className=\"tab_header display-flex justify-between mb1\">\r\n                    <small className=\"text-muted\">upd: { lustUpdTime }</small>\r\n                    <button\r\n                        onClick={this.displayModal}\r\n                        className=\"btn btn-outline-primary btn-sm\"\r\n                    >Добавить сессию</button>\r\n                </div>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr className=\"table-dark\">\r\n                            <th>Название</th>\r\n                            <th>Группа</th>\r\n                            <th>Статус</th>\r\n                            <th>Дата создания</th>\r\n                            <th>Код</th>\r\n                            <th>Раздел / Фото</th>\r\n                            <th>Опции</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {table}\r\n                    </tbody>\r\n                </table>\r\n                \r\n                {form}\r\n\r\n                <InlineTips title=\"О сессиях:\">\r\n                    <h5 className=\"alert-heading text-warning\">Важно!</h5>\r\n                    <ol>\r\n                        <li>При <strong className=\"text-info\">изменении группы сессии</strong> необходимо переместить папку сессии в Вашем Хранилище в соответствующую папку группы <strong className=\"text-info\">вручную</strong> и затем <strong className=\"text-info\">проверить фото</strong>.<br />В будущих обновлениях это будет происходить автоматически.</li>\r\n                    </ol>\r\n                    <h5>Другие советы</h5>\r\n                    <ol>\r\n                        <li><strong>Разделы</strong> внутри сессий создаются Вами в папке сессии на Диске. И хотя, их количество не ограничено мы не рекомендуем слишком сильно дробить сессию.</li>\r\n                        <li>Если Вы <strong>удалили сессию</strong> на Диске вручную, а здесь она отображается, Вы можете добавить папку сессии на Диск с тем же названием, обновить фото и они снова будут связаны</li>\r\n                        <li>Кнопка <i className=\"fas fa-sync-alt text-success\"></i> - сверяет <strong>разделы и фото</strong> на Вашем Диске с сессией. Не забывайте ей пользоваться при изменении файлов и папок на Диске, чтобы показывать клиентам актуальные наборы фото.</li>\r\n                    </ol>\r\n                </InlineTips>\r\n                \r\n                <Notice status={this.state.notice} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TableRow extends React.Component{\r\n    render(){\r\n        const g = this.props.row;\r\n        //console.log(g)\r\n        return(\r\n            <tr>\r\n                <td>{g.name}</td>\r\n                <td>{g.group}</td>\r\n                <td>{g.status}</td>\r\n                <td>{g.date}</td>\r\n                <td>{g.password}</td>\r\n                <td>{g.groups.groupCount} / {g.groups.fotoCount}</td>\r\n                <td>\r\n                    <RowOptions \r\n                        id={g.id}\r\n                        path={'/'+g.group+'/'+g.name}\r\n                        upd={this.props.upd}\r\n                        displayUpdModal={this.props.displayUpdModal}\r\n                    />\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nclass RowOptions extends React.Component{\r\n\r\n    state = {\r\n        notice: null,\r\n    }\r\n\r\n    prepareImagesFromDrive = (e) => {\r\n        e.preventDefault();\r\n        this.notice = 'loading';\r\n        \r\n        let formData = new FormData();\r\n        formData.append('user', user.id);\r\n        formData.append('action', 'prepare_images');\r\n        formData.append('postid', this.props.id);\r\n        formData.append('path', this.props.path);\r\n        \r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n            .then(res => res.json())    \r\n            .then(\r\n                (res) => {\r\n                    if(res.result === 'ok'){\r\n                        this.props.upd();\r\n                        this.notice = null;\r\n                    }\r\n                    else{\r\n                        this.notice = 'error';\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.notice = 'error'\r\n                }\r\n            )    \r\n    }\r\n\r\n    removePost = (e) => {\r\n        e.preventDefault();\r\n\r\n        const prepare = window.confirm('Это действие нельзя отменить!');\r\n        if( !prepare )\r\n            return;\r\n        this.notice = 'loading';\r\n        let formData = new FormData();\r\n        formData.append('user', user.id);\r\n        formData.append('action', 'delete_post');\r\n        formData.append('postid', this.props.id);\r\n        formData.append('path', this.props.path);\r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n            .then(res => res.json())\r\n            .then(\r\n                (res) => {\r\n                    if(res.result === 'ok'){\r\n                        this.props.upd();\r\n                        this.notice = null\r\n                    }\r\n                    else{\r\n                        this.notice = 'error';\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.notice = 'error'\r\n                }\r\n            )    \r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <ReactTooltip type=\"info\" />\r\n                <button\r\n                    onClick={this.props.displayUpdModal}\r\n                    data-id={this.props.id}\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-info mr2\"\r\n                    data-tip=\"Настройки сессии\"\r\n                >\r\n                    <i className=\"fas fa-cog\"></i>\r\n                </button>\r\n                <button\r\n                    onClick={this.prepareImagesFromDrive}\r\n                    data-id={this.props.id}\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-success mr2\"\r\n                    data-tip=\"Проверка фото\"\r\n                >\r\n                    <i className=\"fas fa-sync-alt\"></i>\r\n                </button>\r\n                <button\r\n                    onClick={this.removePost}\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-danger mr2\"\r\n                    data-tip=\"Удалить сессию\"\r\n                >\r\n                    <i  className=\"far fa-times-circle\"></i>\r\n                </button>\r\n                <Notice status={this.notice} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport { CollectionTab }","import React from 'react'\r\nimport {User} from '../../user'\r\nimport {ChForm} from '../../modals/modal'\r\nimport {Notice} from '../../notice'\r\n\r\nconst user = new User();\r\n\r\nclass FormatsTab extends React.Component{\r\n\r\n    state = {\r\n        groups: [],\r\n        openForm: false,\r\n        group: null,\r\n        upd: new Date().toLocaleString(),\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.upd();\r\n    }\r\n\r\n    upd = () => {\r\n        this.setState({notice: 'loading'})\r\n\r\n        // Create html query\r\n        let formData = new FormData();\r\n        formData.append('user', user.id);\r\n        formData.append('action', 'getformats');\r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n            .then(res => res.json())    \r\n            .then(\r\n                (res) => {\r\n                    if( res.result === 'error' ){\r\n                        this.setState({\r\n                            notice: 'error'\r\n                        });\r\n                    }\r\n                    else{\r\n                        this.setState({ \r\n                            groups: res,\r\n                            upd: new Date().toLocaleString(),\r\n                            notice: null\r\n                        })\r\n                        user.upd();\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        notice: 'error'\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    ifSuccess = () => {\r\n        this.setState(\r\n            {\r\n                modalAction: 'add',\r\n                notice: null,\r\n                openForm: false,\r\n            },\r\n            this.upd()\r\n        )\r\n    }\r\n\r\n    displayModal = (e) => {\r\n        this.setState(\r\n            {\r\n                openForm: true,\r\n                group: false,\r\n                modalAction: 'addformat'\r\n            }\r\n        );\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ openForm: false })\r\n    }\r\n\r\n    displayUpdModal = (e) => {\r\n        const id = e.target.closest('.btn').dataset.id;\r\n        let group = false;\r\n        this.state.groups.forEach((el,i) => {\r\n            if(el.id === id){\r\n                group = el;\r\n            }\r\n        })\r\n        this.setState(\r\n            {\r\n                openForm: true,\r\n                modalAction: 'updformat',\r\n                group: group,\r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n        const groups = this.state.groups;\r\n        const item = this.state.group;\r\n        const lustUpdTime = this.state.upd;\r\n        const table = groups ? groups.map((row) => \r\n                <TableRow\r\n                    key={row.id}\r\n                    row={row}\r\n                    upd={this.upd}\r\n                    displayUpdModal={this.displayUpdModal}\r\n                />) : [];\r\n        const fields = [\r\n            {\r\n                editable: true,\r\n                required: true,\r\n                label: 'Тип',\r\n                type: 'text',\r\n                col: 12,\r\n                fieldname: 'fototype',\r\n                caption: 'До 10 символов',\r\n                init: item ? item.fototype : ''\r\n            },\r\n            {\r\n                editable: true,\r\n                required: true,\r\n                label: 'Размер (см)',\r\n                type: 'text',\r\n                col: 6,\r\n                fieldname: 'size',\r\n                caption: 'До 10 символов',\r\n                init: item ? item.size : ''\r\n            },\r\n            {\r\n                editable: true,\r\n                required: true,\r\n                label: 'Стоимость (руб)',\r\n                type: 'number',\r\n                col: 6,\r\n                fieldname: 'cost',\r\n                caption: '',\r\n                init: item ? item.cost : ''\r\n            },\r\n            {\r\n                editable: true,\r\n                required: true,\r\n                label: 'Загружаемый',\r\n                type: 'checkbox',\r\n                col: 6,\r\n                fieldname: 'download',\r\n                caption: 'Выдаётся цифровая копия',\r\n                init: item ? item.download : ''\r\n            },\r\n            {\r\n                editable: false,\r\n                required: true,\r\n                label: 'Изображение формата',\r\n                type: 'file',\r\n                col: 12,\r\n                fieldname: 'sample',\r\n                caption: 'Изображение как образец формата',\r\n                init: item ? item.sample : ''\r\n            },\r\n            {\r\n                editable: true,\r\n                required: false,\r\n                label: 'Описание',\r\n                type: 'textarea',\r\n                col: 12,\r\n                fieldname: 'comment',\r\n                caption: 'До 300 символов',\r\n                init: item ? item.comment : ''\r\n            },\r\n        ]\r\n        const form = this.state.openForm\r\n            && <ChForm\r\n                type=\"modal\"\r\n                open={this.state.openForm}\r\n                action={this.state.modalAction}\r\n                close={this.closeModal}\r\n                success={this.ifSuccess}\r\n                fields={fields}\r\n                item={item}\r\n                />\r\n        return(\r\n            <div id=\"groups-tab\" className=\"main-tab\">\r\n                <div className=\"tab_header display-flex justify-between mb1\">\r\n                    <small className=\"text-muted\">upd: { lustUpdTime }</small>\r\n                    <button\r\n                        onClick={this.displayModal}\r\n                        className=\"btn btn-outline-primary btn-sm\"\r\n                    >Добавить формат</button>\r\n                </div>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr className=\"table-dark\">\r\n                            <th>Образец</th>\r\n                            <th>Тип</th>\r\n                            <th>Размер</th>\r\n                            <th>Стоимость</th>\r\n                            <th>ЦК</th>\r\n                            <th>Описание</th>\r\n                            <th>Опции</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {table.length > 0 ? table : <tr><td colSpan=\"7\">Элементы отсутствуют</td></tr>}\r\n                    </tbody>\r\n                </table>\r\n                \r\n                {form}\r\n                \r\n                <Notice status={this.state.notice} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TableRow extends React.Component{\r\n    render(){\r\n        const g = this.props.row;\r\n        return(\r\n            <tr>\r\n                <td>{g.sample}</td>\r\n                <td>{g.fototype}</td>\r\n                <td>{g.size}</td>\r\n                <td>{g.cost}</td>\r\n                <td>{g.download}</td>\r\n                <td style={{maxWidth: '100px', lineHeight: 1}}><small>{g.comment}</small></td>\r\n                {/* <td>{g.options}</td> */}\r\n                <td>\r\n                    <RowOptions\r\n                        id={g.id}\r\n                        upd={this.props.upd}\r\n                        displayUpdModal={this.props.displayUpdModal}\r\n                    />\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nclass RowOptions extends React.Component{\r\n\r\n    state = {\r\n        notice: null\r\n    }\r\n\r\n    removeTerm = (e) => {\r\n        const m = e.target.closest('.btn');\r\n        const id = m.dataset.id;\r\n        this.setState({notice: 'loading'});\r\n        let formData = new FormData();\r\n        formData.append('user', user.id);\r\n        formData.append('action', 'delete_format');\r\n        formData.append('id', id);\r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n            .then(res => res.json())    \r\n            .then(\r\n                (res) => {\r\n                    if(res.message){\r\n                        this.props.upd();\r\n                        this.setState({notice: null});\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        error: error + ': Сервер не отвечает',\r\n                        notice: 'error'\r\n                    });\r\n                }\r\n            )    \r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <button\r\n                    onClick={this.props.displayUpdModal}\r\n                    data-id={this.props.id}\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-info mr2\"\r\n                    title=\"Настройки формата\"\r\n                >\r\n                    <i className=\"fas fa-cog\"></i>\r\n                </button>\r\n                <button\r\n                    onClick={this.removeTerm}\r\n                    data-id={this.props.id}\r\n                    data-action=\"delete_term\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-danger mr2\"\r\n                    title=\"Удалить формат\"\r\n                >\r\n                    <i  className=\"far fa-times-circle\"></i>\r\n                </button>\r\n                <Notice status={this.state.notice} /> \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport { FormatsTab }","import React from 'react'\r\nimport {User} from '../../user'\r\nimport {ChForm} from '../../modals/modal'\r\nimport {Notice} from '../../notice'\r\nimport Img from '../../../images/demo.png'\r\n\r\nconst user = new User();\r\n\r\nclass OrdersTab extends React.Component{\r\n\r\n    state = {\r\n        openForm: false,\r\n        group: null,\r\n        singleOrder: false,\r\n        upd: new Date().toLocaleString(),\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.upd();\r\n    }\r\n\r\n    upd = () => {\r\n        this.setState({notice: 'loading'})\r\n        // Create html query\r\n        let formData = new FormData();\r\n        formData.append('user', user.id);\r\n        formData.append('action', 'getorders');\r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n            .then(res => res.json())    \r\n            .then(\r\n                (res) => {\r\n                    if( res.result === 'error' ){\r\n                        this.setState({\r\n                            notice: 'error'\r\n                        });\r\n                    }\r\n                    else{\r\n                        this.setState(\r\n                            {\r\n                                orders: res,\r\n                                upd: new Date().toLocaleString(),\r\n                                notice: null\r\n                            }\r\n                        )\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        notice: 'error'\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    ifSuccess = () => {\r\n        this.setState(\r\n            {\r\n                modalAction: 'add',\r\n                notice: null,\r\n                openForm: false,\r\n            },\r\n            this.upd()\r\n        )\r\n    }\r\n\r\n    displayModal = (e) => {\r\n        this.setState(\r\n            {\r\n                openForm: true,\r\n                modalAction: 'addterm'\r\n            }\r\n        );\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ openForm: false })\r\n    }\r\n\r\n    openOrderInfo = (e) => {\r\n        const id = e.target.closest('tr').dataset.orderid;\r\n        let formData = new FormData();\r\n        formData.append('user', user.id);\r\n        formData.append('action', 'getorderinfo');\r\n        formData.append('orderid', id);\r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n            .then(res => res.json())    \r\n            .then(\r\n                (res) => {\r\n                    if( res.result === 'ok' ){\r\n                        this.setState({\r\n                            singleOrder: res.message\r\n                        });\r\n                    }\r\n                    else{\r\n                        this.setState(\r\n                            {\r\n                                notice: 'error'\r\n                            }\r\n                        )\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        notice: 'error'\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    closeOrderInfo = () => {\r\n        this.setState({singleOrder: false})\r\n    }\r\n\r\n\r\n    render(){\r\n        const groups = this.state.orders;\r\n        const item = this.state.group;\r\n        const table = groups !== undefined ? groups.map((row) => \r\n                <TableRow\r\n                    key={row.id}\r\n                    row={row}\r\n                    upd={this.upd}\r\n                    openOrderInfo={this.openOrderInfo}\r\n                />) : [];\r\n        const fields = [\r\n            {\r\n                editable: true,\r\n                required: true,\r\n                label: 'Клиент',\r\n                type: 'text',\r\n                fieldname: 'title',\r\n                caption: 'До 30 символов',\r\n                init: item && item.name\r\n            },\r\n            {\r\n                editable: true,\r\n                required: false,\r\n                label: 'Заметка',\r\n                type: 'textarea',\r\n                fieldname: 'comment',\r\n                caption: 'До 300 символов',\r\n                init: item && item.comment\r\n            },\r\n        ]\r\n        const form = this.state.openForm\r\n            && <ChForm\r\n                type=\"modal\"\r\n                open={this.state.openForm}\r\n                action={this.state.modalAction}\r\n                close={this.closeModal}\r\n                success={this.ifSuccess}\r\n                fields={fields}\r\n                item={item}\r\n                />\r\n        if( !this.state.singleOrder ){\r\n            return(\r\n                <div id=\"groups-tab\" className=\"main-tab\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr className=\"table-dark\">\r\n                                <th>Название</th>\r\n                                <th>Сессия</th>\r\n                                <th>Группа</th>\r\n                                <th>Стоимость</th>\r\n                                <th>Статус</th>\r\n                                <th>Дата</th>\r\n                                <th>Заметки</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {table.length > 0 ? table : <tr><td colSpan=\"7\">Элементы отсутствуют</td></tr>}\r\n                        </tbody>\r\n                    </table>\r\n                    {form}\r\n                    <Notice status={this.state.notice} />\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <>\r\n                <div id=\"groups-tab\" className=\"main-tab\">\r\n                    <OrderInfo order={this.state.singleOrder} close={this.closeOrderInfo} />\r\n                </div>\r\n                <Notice status={this.state.notice} />\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nclass TableRow extends React.Component{\r\n    render(){\r\n        const g = this.props.row;\r\n        return(\r\n            <tr data-orderid={g.id} onClick={this.props.openOrderInfo}>\r\n                <td className=\"text-info pointer\">#{g.id} {g.name}</td>\r\n                <td>{g.session}</td>\r\n                <td>{g.group}</td>\r\n                <td>{g.cart.total} <i className=\"fas fa-ruble-sign\"></i></td>\r\n                <td>{g.status}</td>\r\n                <td>{g.date}</td>\r\n                <td style={{maxWidth: '100px', lineHeight: 1}}><small>{g.comment}</small></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nclass OrderInfo extends React.Component{\r\n\r\n    render(){\r\n        let items = [];\r\n        const order = this.props.order;\r\n        const meta = order.meta;\r\n        const cart = order.cart;\r\n        \r\n        for(let item in cart.items){\r\n            let path = cart.items[item].itemPath;\r\n            let title = cart.items[item].itemTitle;\r\n            for(let f in cart.items[item].formats){\r\n                items.push( <OrderInfoItem\r\n                                key={title+cart.items[item].formats[f].size}\r\n                                path={path}\r\n                                format={cart.items[item].formats[f]}\r\n                                title={title}\r\n                            />\r\n                           );\r\n            }\r\n        }\r\n        return(\r\n            <div id=\"single-order\" className=\"row\">\r\n                <button onClick={this.props.close} className=\"btn btn-outline-info btn-sm mb20\"><i className=\"fas fa-arrow-left\"></i> назад к списку</button>\r\n                <div className=\"col-12 flex-center justify-between single-order__title\">\r\n                    <h4>#{order.id} {order.title}</h4>\r\n                    <div className=\"mb10\">\r\n                        <span className=\"pr10\"><strong>Создан: </strong>{order.date}</span>\r\n                        <span className=\"text-success\"><strong>Оплачен: </strong>{order.date}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <p><strong>Телефон:</strong> <a href={'tel:'+meta.phone}>{meta.phone}</a></p>\r\n                    <p><strong>Email:</strong> <a href={'mail:'+meta.email}>{meta.email}</a></p>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <p><strong>Группа: </strong>{order.group}</p>\r\n                    <p><strong>Сессия: </strong>{order.session}</p>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <p><strong>СнОПД: </strong>{meta.confirm == 'on' ? <strong className=\"text-success\">получено</strong> : <strong className=\"text-alert\">не получено</strong>}</p>\r\n                    <p><strong>Эквайринг: </strong>{meta.payment}</p>\r\n                </div>\r\n                <div className=\"col-12 flex-center justify-between single-order__title mt20\">\r\n                    <h4>Что в заказе</h4>\r\n                    <div className=\"mb10\">\r\n                        <span className=\"m5\">Фото: <strong>{cart.count} шт.</strong></span>\r\n                        <span className=\"m5\">На сумму: <strong>{cart.total} <i class=\"fas fa-ruble-sign\"></i></strong></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"single-order__items\">\r\n                    {items}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass OrderInfoItem extends React.Component{\r\n\r\n    state = {\r\n        fotoBin: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.state.fotoBin){\r\n            let formData = new FormData();\r\n            formData.append('path', this.props.path);\r\n            formData.append('user', user.id);\r\n            formData.append('action', 'getthumb');\r\n            fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (res) => {\r\n                        if( res['result'] === 'error' ){\r\n                            //...\r\n                        }\r\n                        else if( res['result'] === 'ok' ){\r\n                            this.setState({fotoBin: res['message']});\r\n                        }\r\n                        else{\r\n                            //...\r\n                        }\r\n                    },\r\n                    (error) => {\r\n                        this.setState({\r\n                            notice: 'error'\r\n                        });\r\n                    }\r\n                )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const f = this.props.format;\r\n        const classes = this.state.fotoBin ? 'yd-foto' : 'yd-foto loading';\r\n        return(\r\n            <div className=\"cart-item__wrapper\">\r\n                <div className=\"cart-item__title\">{this.props.title}</div>\r\n                <div className=\"cart-item__img\">\r\n                    <img\r\n                        className={classes}\r\n                        data-title={this.props.title}\r\n                        src={this.state.fotoBin ? this.state.fotoBin : Img}\r\n                        alt=\"choose.ru\"\r\n                    />\r\n                </div>\r\n                <div className=\"cart-item__info\">\r\n                    <span><small>Тип:</small> {f.type}</span>\r\n                    <span><small>Формат:</small> {f.size}</span>\r\n                    <span><small>Цена:</small> {f.cost}.0</span>\r\n                    <span><small>Кол-во:</small> {f.qty}</span>\r\n                    <span><small>Итого:</small> {f.cost*f.qty}.0 <i className=\"fons80 fas fa-ruble-sign\"></i></span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { OrdersTab }","import React from 'react'\r\nimport {User} from '../../user'\r\nimport ReactTooltip from 'react-tooltip';\r\nimport {Notice} from '../../notice'\r\n\r\nlet user = new User();\r\n\r\nclass AccountTab extends React.Component{\r\n\r\n    state = {\r\n        notice: null,\r\n        isLoading: false,\r\n    }\r\n\r\n    handleChange = () => {\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if( this.state.isLoading ){\r\n            console.error('нельзя')\r\n            return;}\r\n        \r\n        let formData = new FormData(e.target);\r\n        // Список пар ключ/значение\r\n        let updData = {};\r\n        for(let [name, value] of formData) {\r\n            updData[name] = value;\r\n        }\r\n        let endData = new FormData();\r\n        endData.append('user', user.id);\r\n        endData.append('action', 'update_user');\r\n        endData.append('upd', JSON.stringify(updData));\r\n        this.setState(\r\n            {notice: 'loading', isLoading: true}\r\n        )\r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: endData })\r\n            .then(res => res.json())    \r\n            .then(\r\n                (res) => {\r\n                    if( res.result === 'error' ){\r\n                        this.setState({\r\n                            notice: 'error'\r\n                        });\r\n                    }\r\n                    else{\r\n                        user.upd() && this.setState({ upd: new Date().toLocaleString() })\r\n                        this.setState(\r\n                            { notice: null, isLoading: false }\r\n                        );\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        notice: 'error'\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    render(){\r\n        const alert = <div className=\"alert alert-inline alert-success\"><h4 className=\"alert-heading\">Добро пожаловать!</h4><p className=\"mb-0\">Пожалуйста, заполните профиль, чтобы разблокировать управление сервисом.</p></div>\r\n        \r\n        return(\r\n            <div id=\"groups-tab\" className=\"main-tab\">\r\n                <ReactTooltip type=\"info\" />\r\n                <Notice status={this.state.notice} />\r\n\r\n                { user.getProp('actdrivekey') === '' ? alert : null }\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"tab_header display-flex justify-between mb2\">\r\n                        <div>\r\n                            <small>* - данные отображаются в <a href=\"#\">каталоге</a></small><br />\r\n                            <small>** - данные отображаются в <a href=\"#\">каталоге</a> в <i data-tip=\"Может быть просмотрен только человеком\"> безопасном</i> виде</small>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-outline-primary\" disabled={this.state.isLoading}>Сохранить</button>\r\n                    </div>                \r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4\">\r\n                            <Card title=\"Личные данные\">\r\n                                <Input label=\"Имя / Организация *\"\r\n                                        caption=\"Ваше имя или название организации\">\r\n                                    <input\r\n                                        className=\"form-control form-control-sm\"\r\n                                        type='text'\r\n                                        name='username'\r\n                                        defaultValue={user && user.getProp('username')}\r\n                                        required\r\n                                    />\r\n                                </Input>\r\n                                <Input label=\"О себе *\"\r\n                                        caption=\"Ваши описание или характеристика. Не указывайте здесь Ваши контакты.\">\r\n                                    <textarea\r\n                                        className=\"form-control form-control-sm\"\r\n                                        name='bio'\r\n                                        defaultValue={user && user.getProp('bio')}\r\n                                        placeholder=\"Не указывайте здесь Ваши контакты\"\r\n                                        rows=\"4\"\r\n                                        required\r\n                                    >\r\n                                    </textarea>\r\n                                </Input>\r\n                            </Card>\r\n                        </div>\r\n                        <div className=\"col-lg-4\">\r\n                            <Card title=\"Контакты **\">\r\n                                <Input label=\"Телефон\"\r\n                                       caption=\"\">\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">+7</span>\r\n                                        </div>\r\n                                        <input\r\n                                            className=\"form-control form-control-sm\"\r\n                                            type='tel'\r\n                                            name='tel'\r\n                                            required\r\n                                            defaultValue={user && user.getProp('tel')}\r\n                                        />\r\n                                    </div>\r\n                                    \r\n                                </Input>\r\n                                <Input label=\"Электронная почта\"\r\n                                       caption=\"\">\r\n                                    <input\r\n                                        className=\"form-control form-control-sm\"\r\n                                        type='text'\r\n                                        name='email'\r\n                                        defaultValue={user && user.getProp('email')}\r\n                                    />\r\n                                </Input>\r\n                            </Card>\r\n                        </div>\r\n                        <div className=\"col-lg-4\">\r\n                            <Card title=\"Хранилище\" \r\n                                    data={user ? user.getProp('actdrivekey') : 0}\r\n                                    errormess=\"Без подключенного хранилища Вам будет доступен только каталог мастеров.\"\r\n                                    >\r\n                                <Input label=\"Ваше хранилище\"\r\n                                        caption=\"Выберите удобное для Вас хранилище данных из списка\">\r\n                                    <select\r\n                                        className=\"form-control form-control-sm\"\r\n                                        name='userdrive'\r\n                                        defaultValue={user && user.getProp('userdrive')}\r\n                                    >\r\n                                        <option value=\"yd\">Яндекс.Диск</option>\r\n                                        {/* <option value=\"gd\">Google диск</option> */}\r\n                                    </select>\r\n                                </Input>\r\n                                <Input label=\"Ключ приложения\"\r\n                                        caption=\"Секретный ключ для подключения вашего хранилища\">\r\n                                    <input\r\n                                        className=\"form-control form-control-sm\"\r\n                                        type='text'\r\n                                        name='actdrivekey'\r\n                                        defaultValue={user && user.getProp('actdrivekey')}\r\n                                    />\r\n                                </Input>\r\n                                <h6>Как получить ключ приложения:</h6>\r\n                                <ol>\r\n                                    <li className=\"\">\r\n                                        Убедитесь, что в этом браузере Вы авторизованы на сайте Яндекс тем аккаунтом, который будете использовать для работы с сервисом.\r\n                                    </li>\r\n                                    <li className=\"\">Получите ключ приложения <a rel=\"noreferrer\" target=\"_blank\" href={authUrl()}>на этой странице</a> и вставьте его в поле выше .</li>\r\n                                </ol>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { AccountTab }\r\n\r\nfunction  Input(props) {\r\n    return(\r\n        <div className=\"form-group\">\r\n            <label className=\"col-form-label col-form-label-sm\">{props.label}</label>\r\n            {props.children}\r\n            <small className=\"form-text text-muted\">{props.caption}</small>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Card(props) {\r\n    let error = false;\r\n    if( props.data === 0 ){\r\n        error = <ErrorIcon mess={props.errormess} />\r\n    }\r\n    return(\r\n        <div className=\"card border-secondary mb3\">\r\n            <div className=\"card-header\">{props.title} {error}</div>\r\n            <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">{props.children}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ErrorIcon(props) {\r\n    return(\r\n        <div className=\"float-right\" data-tip={props.mess}>\r\n            <i className=\"fas fa-exclamation-triangle text-warning fons120\"></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction authUrl(params) {\r\n    let url = 'https://oauth.yandex.ru/authorize?'\r\n        url += 'response_type=token'\r\n        url += '&client_id=159527890aee42b699bc57022fb0afbc'\r\n        //[& device_id=<идентификатор устройства>]\r\n        //[& device_name=<имя устройства>]\r\n        url += '&redirect_uri=https://oauth.yandex.ru/verification_code'\r\n        //[& login_hint=<имя пользователя или электронный адрес>]\r\n        //[& scope=<запрашиваемые необходимые права>]\r\n        //[& optional_scope=<запрашиваемые опциональные права>]\r\n        url += '&force_confirm=yes'\r\n        //[& state=<произвольная строка>]\r\n        url += '&display=popup'\r\n    return url\r\n}","import React from 'react'\r\nimport {User} from '../../user'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst u = new User();\r\n\r\nclass DriveTab extends React.Component{\r\n\r\n    state = {\r\n        path: 'app:/',\r\n        sources: false,\r\n        lvl: 1,\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.upd();\r\n    }\r\n\r\n    upd = (path = false) => {\r\n        let formData = new FormData();\r\n        formData.append('user', u.id);\r\n        formData.append('action', 'get_resourses');\r\n        formData.append('path', path ? path : this.state.path);\r\n        fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\r\n            .then(res => res.json())    \r\n            .then(\r\n                (res) => {\r\n                    if( res.result === 'error' ){\r\n                        this.setState({\r\n                            notice: 'error'\r\n                        });\r\n                    }\r\n                    else{\r\n                        this.setState(\r\n                            { \r\n                                sources: JSON.parse(res['message']),\r\n                                upd: new Date().toLocaleString(),\r\n                                notice: null\r\n                            }\r\n                        )\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        notice: 'error'\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    goToDir = (path) => {\r\n        this.setState({\r\n            path: this.preparePath(path),\r\n            lvl: this.state.lvl + 1,\r\n        });\r\n        this.upd(path);\r\n    }\r\n\r\n    goBack = () => {\r\n        let [path, exclude, output] = [this.state.path.split('/'), '', 'app:/'];\r\n        exclude = path.pop();\r\n        if( path.length > 1 ){    \r\n            output = path.join('/');\r\n        }\r\n        else{\r\n            output = 'app:/';\r\n        }\r\n        this.setState({\r\n            path: output,\r\n            lvl: this.state.lvl > 1 ? this.state.lvl - 1 : 1,\r\n        });\r\n        this.upd(output);\r\n    }\r\n\r\n    preparePath(path){\r\n        return path.replace( 'disk:/Приложения/CHOOSE/', 'app:/' );\r\n    }\r\n\r\n    render(){\r\n        let dirs = []\r\n        if(this.state.sources){\r\n            for(let dir in this.state.sources){\r\n                dirs.push(<Src path={this.state.path} data={this.state.sources[dir]} goTo={this.goToDir} />);\r\n            }\r\n            return(\r\n                <>\r\n                <div className=\"d-flex justify-between\">\r\n                    <div className=\"breadcrumbs\"><FontAwesomeIcon icon=\"arrow-alt-circle-right\" className=\"mr10\" /> {this.state.path}</div>\r\n                    <DirLvl_Caption lvl={this.state.lvl} />\r\n                </div>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr className=\"table-primary\">\r\n                            <td style={{width:'50px'}}>Тип</td>\r\n                            <td>Название</td>\r\n                            <td>Содержание</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <BackBtn f={this.goBack} path={this.state.path} />\r\n                        {dirs}\r\n                    </tbody>\r\n                </table>\r\n                </>\r\n            )\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport {DriveTab}\r\n\r\nfunction BackBtn(props){\r\n    if( props.path !== 'app:/' ){\r\n        return(\r\n            <tr><td>\r\n                <button\r\n                    key={props.path}\r\n                    onClick={props.f}\r\n                    className=\"btn btn-outline-info btn-sm\">\r\n                        <FontAwesomeIcon icon=\"long-arrow-alt-left\" className=\"src-icon\" />\r\n                </button>\r\n            </td></tr>\r\n        )\r\n    }\r\n    else{\r\n        return <tr><td>...</td></tr>;\r\n    }\r\n}\r\n\r\nfunction Src(props){\r\n    let [icon, onclick] = ['file', () => {}];\r\n    if(props.data.type === 'dir'){\r\n        icon = 'folder';\r\n        onclick = () => props.goTo(props.data.path);\r\n    }\r\n    \r\n    return(\r\n        <tr className=\"drive__dir\" onClick={onclick}>\r\n            <td><FontAwesomeIcon icon={icon} className=\"src-icon text-info\" /></td>\r\n            <td className=\"tal\"><span className=\"title\">{props.data.name}</span></td>\r\n            <td><span className=\"path\"></span></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nfunction DirLvl_Caption(props){\r\n    let text = '';\r\n    if(props.lvl === 1){\r\n        text = <div className=\"d-flex\"><small className=\"mr10\">здесь должны располагаться</small><h5>ГРУППЫ</h5></div>;\r\n    }\r\n    else if(props.lvl === 2){\r\n        text = <div className=\"d-flex\"><small className=\"mr10\">здесь должны располагаться</small><h5>СЕССИИ</h5></div>;\r\n    }\r\n    else if(props.lvl === 3){\r\n        text = <div className=\"d-flex\"><small className=\"mr10\">здесь должны располагаться</small><h5>РАЗДЕЛЫ СЕССИИ</h5></div>;\r\n    }\r\n    else if(props.lvl === 4){\r\n        text = <div className=\"d-flex\"><small className=\"mr10\">здесь должны располагаться</small><h5>ФОТО</h5></div>;\r\n    }\r\n    return text;\r\n}","import React from 'react'\r\nimport {GroupsTab} from './groups-tab'\r\nimport {CollectionTab} from './collections-tab'\r\nimport {FormatsTab} from './formats-tab'\r\nimport {OrdersTab} from './orders-tab'\r\nimport {AccountTab} from './account-tab'\r\nimport {DriveTab} from './drive-tab'\r\n\r\nimport './style.sass'\r\nimport {User} from '../../user'\r\nimport { Tips } from '../../helper'\r\n\r\nconst user = new User();\r\n\r\nclass Account extends React.Component{\r\n\r\n    state = {\r\n        mainTab: user.getProp('actdrivekey') === '' ? 'account' : 'disk',\r\n        login: user.cookieChecker()\r\n    }\r\n\r\n    swapMainTabs = (e) => {\r\n        if(!user.cookieChecker()){\r\n            this.props.setPageFunc('home')\r\n        }\r\n        if(user.getProp('actdrivekey') === ''){\r\n            return\r\n        }\r\n        this.setState({ mainTab: e.target.closest('li').dataset.tab })\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if(!user.cookieChecker()){\r\n            \r\n        }\r\n    }\r\n\r\n    render(){\r\n        //console.log(this.props.userData)\r\n        const mainMenu = [\r\n            {\r\n                key: 'disk',\r\n                title: 'Диск',\r\n                mess: 0,\r\n                icon: 'fas fa-hdd',\r\n                current: this.state.mainTab === 'disk' ? true : false,\r\n            },\r\n            {\r\n                key: 'groups',\r\n                title: 'Группы',\r\n                mess: 0,\r\n                icon: 'fas fa-object-group',\r\n                current: this.state.mainTab === 'groups' ? true : false,\r\n            },\r\n            {\r\n                key: 'collections',\r\n                title: 'Сессии',\r\n                mess: 0,\r\n                icon: 'fas fa-layer-group',\r\n                current: this.state.mainTab === 'collections' ? true : false,\r\n            },\r\n            {\r\n                key: 'formats',\r\n                title: 'Форматы',\r\n                mess: 0,\r\n                icon: 'fas fa-tags',\r\n                current: this.state.mainTab === 'formats' ? true : false,\r\n            },\r\n            {\r\n                key: 'orders',\r\n                title: 'Заказы',\r\n                mess: 0,\r\n                icon: 'fas fa-shopping-bag',\r\n                current: this.state.mainTab === 'orders' ? true : false,\r\n            },\r\n            {\r\n                key: 'account',\r\n                title: 'Профиль',\r\n                mess: 0,\r\n                icon: 'fas fa-user-tie',\r\n                current: this.state.mainTab === 'account' ? true : false,\r\n            }\r\n        ]\r\n\r\n        return(\r\n            <div id=\"account-wrapper\">\r\n                <Sidebar currentPage={this.state.mainTab} mainMenu={mainMenu} swapfunc={this.swapMainTabs} {...this.props} />\r\n                <Main activeTab={this.state.mainTab} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { Account }\r\n\r\nclass Sidebar extends React.Component{\r\n    render(){\r\n        return(\r\n            <div id=\"sidebar\">\r\n                <div className=\"sidebar__body\">\r\n                    <ul className=\"mainmenu list-group\">\r\n                    <li onClick={() => this.props.setPageFunc('home')}\r\n                        key=\"go-home-btn\"\r\n                        className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n                    >\r\n                        <span className=\"flex-column flex-center\">\r\n                            <i className=\"fas fa-home\"></i>\r\n                            <strong>Главная</strong>\r\n                        </span>\r\n                    </li>\r\n                        <List mainMenu={this.props.mainMenu} swapfunc={this.props.swapfunc} />\r\n                    </ul>\r\n                </div>\r\n                <div className=\"sidebar__footer\">\r\n                    {/* <Tips index={this.props.currentPage} /> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Main extends React.Component{\r\n    \r\n    render(){\r\n        let tab = <GroupsTab /> // Стартовый таб\r\n\r\n        if( this.props.activeTab === 'disk' ){\r\n            tab = <DriveTab />\r\n        }\r\n        else if( this.props.activeTab === 'collections' ){\r\n            tab = <CollectionTab />\r\n        }\r\n        else if( this.props.activeTab === 'orders' ){\r\n            tab = <OrdersTab />\r\n        }\r\n        else if( this.props.activeTab === 'formats' ){\r\n            tab = <FormatsTab />\r\n        }\r\n        else if( this.props.activeTab === 'orders' ){\r\n            tab = <OrdersTab />\r\n        }\r\n        else if( this.props.activeTab === 'account' ){\r\n            tab = <AccountTab />\r\n        }\r\n        return(\r\n            <div id=\"main\">\r\n                <div className=\"main__header navbar-dark bg-dark\">\r\n                    <div id=\"logo\" onClick={() => this.props.setPageFunc('home')} className=\"navbar-brand btn\">CHOOSE</div>\r\n                    <span className=\"mla\">Привет, {user.name}!</span>\r\n                </div>\r\n                <div className=\"main__body\">\r\n                    {tab}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction List(props) {\r\n    const numbers = props.mainMenu;\r\n    const listItems = numbers.map((number) => \r\n        <li onClick={props.swapfunc} \r\n            key={number.key.toString()}\r\n            data-tab={number.key}\r\n            data-current={number.current}\r\n            className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n        >\r\n            <span className=\"flex-column flex-center\">\r\n                <i className={number.icon}></i>\r\n                <strong>{number.title}</strong>\r\n            </span>\r\n            <Badge count={number.mess} />\r\n        </li>\r\n    );\r\n    return listItems;\r\n}\r\n\r\nfunction Badge(props){\r\n    if(props.count > 0)\r\n        return <div className=\"badge__wrapper\"><span className=\"badge badge-primary badge-pill\">{props.count}</span></div>\r\n    else\r\n        return null\r\n}","import React from 'react';\nimport 'bootswatch/dist/superhero/bootstrap.min.css';\n//import $ from 'jquery';\n//import Popper from 'popper.js';\nimport './App.sass';\nimport './animate.sass';\nimport '@fortawesome/fontawesome-free/js/all';\n// Components\nimport {Home} from './components/pages/home/home';\nimport {Collection} from './components/pages/collection/collection';\nimport {Account} from './components/pages/account/account';\n\nclass App extends React.Component {\n\n  state = {\n    page: 'home',\n    collPass: false,\n    error: null,\n    auth: 0,\n    post: null,\n  }\n\n  setCollCode = (pass) => {\n    this.setState({collPass: pass, error: null})\n    let formData = new FormData();\n    formData.append('password', pass);\n    formData.append('action', 'check_session_password');\n    fetch(\"http://peremena.rf/api/\", { method: 'POST', body: formData })\n      .then(res => res.json())\n      .then(\n        (res) => {\n          if( res.result !== 'error' ){\n            this.setState({ page: 'collection', post: res });\n          }\n          else{\n            this.setState({ error: 'Неверный код' });\n          }\n        },\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\n        (error) => {\n          this.setState({\n            error: error + ': Сервер не отвечает'\n          });\n        }\n    )\n  }\n\n  setAuthInfoFunc = (data) => {\n    sessionStorage.setItem('CH_user', JSON.stringify(data));\n    setTimeout(() => this.setState({page: 'account'}), 1000);\n  }\n\n  setPage = (title) => {\n    this.setState({page: title})\n  }\n\n  render(){\n    if(this.state.page === 'home')\n      return  <Home\n                error={this.state.error}\n                setPageFunc={this.setPage}\n                setCollCodeFunc={this.setCollCode}\n                setAuthInfoFunc={this.setAuthInfoFunc}\n              />\n    \n    if(this.state.page === 'collection')\n      return <Collection setPageFunc={this.setPage} post={this.state.post} />\n\n    if(this.state.page === 'account')\n      return <Account setPageFunc={this.setPage} userData={this.state.auth} />\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}